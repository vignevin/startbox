[{"path":"/articles/startbox.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"startbox","text":"Le package {startbox} est dédié à la gestion et à l’analyse des données d’essais en protection phytosanitaire, en particulier pour la vigne.","code":"library(startbox)"},{"path":"/articles/startbox.html","id":"manipulation-des-données","dir":"Articles","previous_headings":"","what":"Manipulation des données","title":"startbox","text":"Le package {startbox} propose plusieurs fonctions pour charger, importer et exporter des données en interaction avec un fichier standard Excel. Le package fonctionne avec un fichier Excel standard, qui stocke les données descriptives de l’essai (les modalités mises en place, les caractéristiques de la parcelle, le plan d’expérience) et les données observées. Ce modèle de fichier standard est accessible avec la fonction get_template_excel(). Vous pourrez compléter ultérieurement ce fichier directement dans Excel. Le package fonctionne avec un objet de classe user_data. Cet objet permet de manipuler dans l’environnement R les données d’observations et les métadonnées associées à un essai. Deux cas sont possibles lors de la création : peut décider de créer l’objet ‘user_data’ dans le cas où nous voulons commencer la suivie d’un essai où que nous n’avons pas besoins de charger les données du fichiers Excel (données d’observations et données sur les placettes et modalités (métadonnées)). Dans ce cas se basera sur le fichier Excel, qui est le fichier vierge sans données simplement les feuilles et les tableaux de précréé. crée dans ce cas la classe de cette manière : lui affecte un nom au départ (ici mydata) que nous réutiliserons tout au long de l’utilisation du package. décide de créer l’objet ‘user_data’ dans le cas où nous avons déjà un fichier Excel comprenant les données d’un essai. crée la classe de l’objet de cette façon, en mettant dans le ‘trial_file’ le chemin de notre fichier Excel : lui affecte un nom au départ (ici mydata2) que nous réutiliserons tout au long de l’utilisation du package. Lorsqu’créé l’objet avec un fichier Excel nous avons plusieurs options qui se proposent à nous, le chargement des données d’observations et le chargement des métadonnées. La fonction load_data_sheets permet de charger dans l’environnement de travail toutes les feuilles dont le nom commence par ‘data_’. passe en paramètre de la fonction le nom que nous avons donné à l’objet (ici mydata). Elles sont stockées dans l’objet de classe user_data. Les feuilles de métadonnées (placette, modalite) peuvent être chargées dans l’environnement R à tout moment à l’aide de la fonction load_metadata_sheets, en passant en paramètre le nom que nous avons donné à l’objet user_data (ici mydata2). Il est nécessaire qu’un fichier ait été transmit dans trial_file sinon ça ne fonctionnera pas. Elles sont stockées dans l’objet de classe user_data. Pour automatiser l’ensemble des étapes de chargement des données, la fonction wrapper_data permet de réaliser les fonctions load_metadata_sheets et load_data_sheets en une seule commande. Il est possible d’ajouter directement un tableau de données (data.frame) dans l’attribut obs_data de l’objet user_data. Cela peut être pratique si l’utilisateur travaille avec un fichier .csv brut ou des données créées directement dans R. Pour être utilisable par la suite, le tableau de données doit contenir les colonnes plot_id, observation_date et au moins une colonne avec une variable mesurée. L’utilisateur pourra ultérieurement exporter le fichier Excel standardisé avec une nouvelle feuille qui contiendra ces données d’observations. Les données d’observation peuvent aussi provenir de l’application Topvigne. Il est possible d’utiliser la fonction standardise_topvigne_csv qui permet de transformer et standardiser les données collectées avec Topvigne. Les données sont ensuite ajoutées à l’objet user_data. La fonction export_data_sheets permet de créer une nouvelle version du fichier Excel en y ajoutant les feuilles d’observations présentes dans l’objet. Si un fichier Excel été fourni lors de la création de l’objet, c’est celui-ci qui sera utilisé comme base. Dans le cas contraire, un fichier Excel vierge sera utilisé par défaut. Le fichier est exporté avec un horodatage automatique.","code":"# Cas 1 : création d'un objet vide mydata <- startbox::user_data$new() #> 📄 No file provided. Using default template. # Cas 2 : création d'un objet avec fichier Excel existant mydata2 <- startbox::user_data$new(trial_file = system.file(\"extdata\",\"standard_exemple.xlsx\",package=\"startbox\")) #> 📄 Using provided Excel file: standard_exemple.xlsx startbox::load_data_sheets(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. startbox::load_metadata_sheets(mydata2) #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite. startbox::wrapper_data(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite. # Exemple : chargement d'un fichier CSV local myfilepath <- system.file(\"extdata\",\"teisso_2024_dataF2.csv\",package=\"startbox\") data1 <- read.csv2(myfilepath)  # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = basename(myfilepath), df = data1) #> ✅ Adding a new element: teisso_2024_dataF2.csv file_path <- system.file(\"extdata\",\"maladie_teisso_2024_11h12min_F1_17.06.csv\",package=\"startbox\") # verification si le fichier est issu de topvigne & importation  data_F1 <- startbox::standardise_topvigne_csv(file_path) head(data_F1) #> # A tibble: 6 × 8 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 2 more variables: Observateurs <chr>, Scribe <chr> # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = \"F1\", df = data_F1) #> ✅ Adding a new element: F1"},{"path":"/articles/startbox.html","id":"exporter-le-fichier-excel-standard","dir":"Articles","previous_headings":"","what":"Exporter le fichier Excel standard","title":"startbox","text":"Le package fonctionne avec un fichier Excel standard, qui stocke les données descriptives de l’essai (les modalités mises en place, les caractéristiques de la parcelle, le plan d’expérience) et les données observées. Ce modèle de fichier standard est accessible avec la fonction get_template_excel(). Vous pourrez compléter ultérieurement ce fichier directement dans Excel.","code":""},{"path":"/articles/startbox.html","id":"créer-un-objet-user_data","dir":"Articles","previous_headings":"","what":"Créer un objet user_data","title":"startbox","text":"Le package fonctionne avec un objet de classe user_data. Cet objet permet de manipuler dans l’environnement R les données d’observations et les métadonnées associées à un essai. Deux cas sont possibles lors de la création : peut décider de créer l’objet ‘user_data’ dans le cas où nous voulons commencer la suivie d’un essai où que nous n’avons pas besoins de charger les données du fichiers Excel (données d’observations et données sur les placettes et modalités (métadonnées)). Dans ce cas se basera sur le fichier Excel, qui est le fichier vierge sans données simplement les feuilles et les tableaux de précréé. crée dans ce cas la classe de cette manière : lui affecte un nom au départ (ici mydata) que nous réutiliserons tout au long de l’utilisation du package. décide de créer l’objet ‘user_data’ dans le cas où nous avons déjà un fichier Excel comprenant les données d’un essai. crée la classe de l’objet de cette façon, en mettant dans le ‘trial_file’ le chemin de notre fichier Excel : lui affecte un nom au départ (ici mydata2) que nous réutiliserons tout au long de l’utilisation du package. Lorsqu’créé l’objet avec un fichier Excel nous avons plusieurs options qui se proposent à nous, le chargement des données d’observations et le chargement des métadonnées. La fonction load_data_sheets permet de charger dans l’environnement de travail toutes les feuilles dont le nom commence par ‘data_’. passe en paramètre de la fonction le nom que nous avons donné à l’objet (ici mydata). Elles sont stockées dans l’objet de classe user_data. Les feuilles de métadonnées (placette, modalite) peuvent être chargées dans l’environnement R à tout moment à l’aide de la fonction load_metadata_sheets, en passant en paramètre le nom que nous avons donné à l’objet user_data (ici mydata2). Il est nécessaire qu’un fichier ait été transmit dans trial_file sinon ça ne fonctionnera pas. Elles sont stockées dans l’objet de classe user_data. Pour automatiser l’ensemble des étapes de chargement des données, la fonction wrapper_data permet de réaliser les fonctions load_metadata_sheets et load_data_sheets en une seule commande.","code":"# Cas 1 : création d'un objet vide mydata <- startbox::user_data$new() #> 📄 No file provided. Using default template. # Cas 2 : création d'un objet avec fichier Excel existant mydata2 <- startbox::user_data$new(trial_file = system.file(\"extdata\",\"standard_exemple.xlsx\",package=\"startbox\")) #> 📄 Using provided Excel file: standard_exemple.xlsx startbox::load_data_sheets(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. startbox::load_metadata_sheets(mydata2) #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite. startbox::wrapper_data(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite."},{"path":"/articles/startbox.html","id":"cas-1-sans-fichier-excel","dir":"Articles","previous_headings":"Manipulation des données","what":"Cas 1 : Sans fichier Excel","title":"startbox","text":"peut décider de créer l’objet ‘user_data’ dans le cas où nous voulons commencer la suivie d’un essai où que nous n’avons pas besoins de charger les données du fichiers Excel (données d’observations et données sur les placettes et modalités (métadonnées)). Dans ce cas se basera sur le fichier Excel, qui est le fichier vierge sans données simplement les feuilles et les tableaux de précréé. crée dans ce cas la classe de cette manière : lui affecte un nom au départ (ici mydata) que nous réutiliserons tout au long de l’utilisation du package.","code":"# Cas 1 : création d'un objet vide mydata <- startbox::user_data$new() #> 📄 No file provided. Using default template."},{"path":"/articles/startbox.html","id":"cas-2-avec-un-fichier-excel-fourni","dir":"Articles","previous_headings":"Manipulation des données","what":"Cas 2 : Avec un fichier Excel fourni","title":"startbox","text":"décide de créer l’objet ‘user_data’ dans le cas où nous avons déjà un fichier Excel comprenant les données d’un essai. crée la classe de l’objet de cette façon, en mettant dans le ‘trial_file’ le chemin de notre fichier Excel : lui affecte un nom au départ (ici mydata2) que nous réutiliserons tout au long de l’utilisation du package. Lorsqu’créé l’objet avec un fichier Excel nous avons plusieurs options qui se proposent à nous, le chargement des données d’observations et le chargement des métadonnées. La fonction load_data_sheets permet de charger dans l’environnement de travail toutes les feuilles dont le nom commence par ‘data_’. passe en paramètre de la fonction le nom que nous avons donné à l’objet (ici mydata). Elles sont stockées dans l’objet de classe user_data. Les feuilles de métadonnées (placette, modalite) peuvent être chargées dans l’environnement R à tout moment à l’aide de la fonction load_metadata_sheets, en passant en paramètre le nom que nous avons donné à l’objet user_data (ici mydata2). Il est nécessaire qu’un fichier ait été transmit dans trial_file sinon ça ne fonctionnera pas. Elles sont stockées dans l’objet de classe user_data. Pour automatiser l’ensemble des étapes de chargement des données, la fonction wrapper_data permet de réaliser les fonctions load_metadata_sheets et load_data_sheets en une seule commande.","code":"# Cas 2 : création d'un objet avec fichier Excel existant mydata2 <- startbox::user_data$new(trial_file = system.file(\"extdata\",\"standard_exemple.xlsx\",package=\"startbox\")) #> 📄 Using provided Excel file: standard_exemple.xlsx startbox::load_data_sheets(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. startbox::load_metadata_sheets(mydata2) #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite. startbox::wrapper_data(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite."},{"path":"/articles/startbox.html","id":"charger-les-feuilles-dobservations","dir":"Articles","previous_headings":"Manipulation des données","what":"Charger les feuilles d’observations","title":"startbox","text":"La fonction load_data_sheets permet de charger dans l’environnement de travail toutes les feuilles dont le nom commence par ‘data_’. passe en paramètre de la fonction le nom que nous avons donné à l’objet (ici mydata). Elles sont stockées dans l’objet de classe user_data.","code":"startbox::load_data_sheets(mydata2) #> ℹ️ No sheets starting with 'data_' found in file."},{"path":"/articles/startbox.html","id":"charger-les-métatadonnées","dir":"Articles","previous_headings":"Manipulation des données","what":"Charger les métatadonnées","title":"startbox","text":"Les feuilles de métadonnées (placette, modalite) peuvent être chargées dans l’environnement R à tout moment à l’aide de la fonction load_metadata_sheets, en passant en paramètre le nom que nous avons donné à l’objet user_data (ici mydata2). Il est nécessaire qu’un fichier ait été transmit dans trial_file sinon ça ne fonctionnera pas. Elles sont stockées dans l’objet de classe user_data.","code":"startbox::load_metadata_sheets(mydata2) #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite."},{"path":"/articles/startbox.html","id":"utiliser-le-wrapper-complet-pour-charger-les-données","dir":"Articles","previous_headings":"Manipulation des données","what":"Utiliser le wrapper complet pour charger les données","title":"startbox","text":"Pour automatiser l’ensemble des étapes de chargement des données, la fonction wrapper_data permet de réaliser les fonctions load_metadata_sheets et load_data_sheets en une seule commande.","code":"startbox::wrapper_data(mydata2) #> ℹ️ No sheets starting with 'data_' found in file. #> ✅ Sheet 'placette' loaded into metadata$placette. #> ✅ Sheet 'modalite' loaded into metadata$modalite."},{"path":"/articles/startbox.html","id":"importer-des-données-dobservation","dir":"Articles","previous_headings":"","what":"Importer des données d’observation","title":"startbox","text":"Il est possible d’ajouter directement un tableau de données (data.frame) dans l’attribut obs_data de l’objet user_data. Cela peut être pratique si l’utilisateur travaille avec un fichier .csv brut ou des données créées directement dans R. Pour être utilisable par la suite, le tableau de données doit contenir les colonnes plot_id, observation_date et au moins une colonne avec une variable mesurée. L’utilisateur pourra ultérieurement exporter le fichier Excel standardisé avec une nouvelle feuille qui contiendra ces données d’observations. Les données d’observation peuvent aussi provenir de l’application Topvigne. Il est possible d’utiliser la fonction standardise_topvigne_csv qui permet de transformer et standardiser les données collectées avec Topvigne. Les données sont ensuite ajoutées à l’objet user_data.","code":"# Exemple : chargement d'un fichier CSV local myfilepath <- system.file(\"extdata\",\"teisso_2024_dataF2.csv\",package=\"startbox\") data1 <- read.csv2(myfilepath)  # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = basename(myfilepath), df = data1) #> ✅ Adding a new element: teisso_2024_dataF2.csv file_path <- system.file(\"extdata\",\"maladie_teisso_2024_11h12min_F1_17.06.csv\",package=\"startbox\") # verification si le fichier est issu de topvigne & importation  data_F1 <- startbox::standardise_topvigne_csv(file_path) head(data_F1) #> # A tibble: 6 × 8 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 2 more variables: Observateurs <chr>, Scribe <chr> # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = \"F1\", df = data_F1) #> ✅ Adding a new element: F1"},{"path":"/articles/startbox.html","id":"cas-de-données-déjà-standardisées","dir":"Articles","previous_headings":"Manipulation des données","what":"Cas de données déjà standardisées","title":"startbox","text":"Il est possible d’ajouter directement un tableau de données (data.frame) dans l’attribut obs_data de l’objet user_data. Cela peut être pratique si l’utilisateur travaille avec un fichier .csv brut ou des données créées directement dans R. Pour être utilisable par la suite, le tableau de données doit contenir les colonnes plot_id, observation_date et au moins une colonne avec une variable mesurée. L’utilisateur pourra ultérieurement exporter le fichier Excel standardisé avec une nouvelle feuille qui contiendra ces données d’observations.","code":"# Exemple : chargement d'un fichier CSV local myfilepath <- system.file(\"extdata\",\"teisso_2024_dataF2.csv\",package=\"startbox\") data1 <- read.csv2(myfilepath)  # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = basename(myfilepath), df = data1) #> ✅ Adding a new element: teisso_2024_dataF2.csv"},{"path":"/articles/startbox.html","id":"cas-des-données-topvigne","dir":"Articles","previous_headings":"Manipulation des données","what":"Cas des données Topvigne","title":"startbox","text":"Les données d’observation peuvent aussi provenir de l’application Topvigne. Il est possible d’utiliser la fonction standardise_topvigne_csv qui permet de transformer et standardiser les données collectées avec Topvigne. Les données sont ensuite ajoutées à l’objet user_data.","code":"file_path <- system.file(\"extdata\",\"maladie_teisso_2024_11h12min_F1_17.06.csv\",package=\"startbox\") # verification si le fichier est issu de topvigne & importation  data_F1 <- startbox::standardise_topvigne_csv(file_path) head(data_F1) #> # A tibble: 6 × 8 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 2 more variables: Observateurs <chr>, Scribe <chr> # Ajout direct dans l'objet user_data avec le nom du fichier mydata2$add_obs(name = \"F1\", df = data_F1) #> ✅ Adding a new element: F1"},{"path":"/articles/startbox.html","id":"exporter-les-données","dir":"Articles","previous_headings":"","what":"Exporter les données","title":"startbox","text":"La fonction export_data_sheets permet de créer une nouvelle version du fichier Excel en y ajoutant les feuilles d’observations présentes dans l’objet. Si un fichier Excel été fourni lors de la création de l’objet, c’est celui-ci qui sera utilisé comme base. Dans le cas contraire, un fichier Excel vierge sera utilisé par défaut. Le fichier est exporté avec un horodatage automatique.","code":""},{"path":"/articles/startbox.html","id":"calculer-les-tableaux-de-résumé","dir":"Articles","previous_headings":"","what":"Calculer les tableaux de résumé","title":"startbox","text":"Le jeu de données d’observation qui sera utilisé à titre d’exemple est le jeu de données d’observation des notations brutes de mildiou sur feuilles réalisées le 17 juin 2024, préalablement importé dans mydata2. Par commodité, il est stocké dans le dataframe data_F1. Pour analyser les données observées, il est nécessaire d’associer chaque placette à une modalité expérimentale. Si la table d’association entre les identifiants des placettes et les modalités n’existe pas, il est possible de décoder les identifiants des placettes pour en extraire la partie concernant le code de la modalité. Dans notre exemple, les identifiants de placette plot_id ont un codage du type “1A”, ou 1 est le code de la modalité, et le code du bloc. Les noms de bloc sont donnés dans la colonne plot_block La fonction remove_string_pairwise permet d’enlever le nom du bloc de plot_id. Avant de poursuivre, il est possible d’extraire quelques informations de plot_id pour enrichir notre tableau avec le code du traitement et le code du bloc. Caution Cette fonction est à utiliser avec précaution ! Dans tous les cas, il est préférable de compléter les feuilles placette et modalité dans le fichier standard. Cela permet en outre d’enrichir les données avec le nom des traitements et la position des placettes. Le tableau ci-dessous résume les fonctions intégrées au package : La fréquence et l’intensité d’attaque sont calculées par défaut à partir des données brutes avec la fonction resume_data(). Le paramètre group_cols permet de définir les colonnes qui regroupent les données entre elles. Dans l’exemple ci-dessous, calcule frequence et intensité d’attaque par plot_id (placette), sur la variable PM_LEAF_PC. Le résultat est un dataframe, incluant une colonne calculation qui précise le nom des fonctions appliquées sur la variable et une colonne value qui donne les valeurs calculées. Il est possible de passer un tableau résumé en format “wide” avec la fonction resume_pivot_wider. Une fois le calcul fait par placette, il est possible de faire la moyenne par modalité. Il suffit de réappliquer la fonction resume_data sur le tableau précédent en demandant un calcul de moyenne avec la fonction mean, que l’peut compléter par le calcul de l’écart-type avec la fonction sd. Ici le calcul est fait uniquement sur la fréquence pour rendre plus lisible l’affichage. Avec la même logique, il est possible de faire le calcul par bloc. Important L’efficacité se calcule sur l’intensité d’attaque ou sur la fréquence d’attaque. Il faut donc au préalable avoir réalisé ces calculs en utilisant la fonction resume_data. L’objectif est de calculer l’efficacité du traitement pour chaque placette, à la fois sur la fréquence et l’intensité d’attaque. Pour réaliser le calcul, nous allons donc appliquer la fonction efficacy sur les valeurs de fréquence et d’intensité calculées par placette précédemment avec la fonction resume_data, en regroupant par plot_id. Dans le cas le plus simple, l’efficacité de traitement est calculée pour chaque placette à partir de la moyenne de tous les TNT 1. Il s’agit du cas par défaut. Il est possible d’avoir des situations plus complexes, ou l’efficacité est calculée par rapport au TNT de chaque bloc, ou même selon une table d’association qui associe à chaque placette plot_id le TNT à prendre en référence, identifié dans ce cas par tnt_id (c’est à dire le plot_id pour le TNT).","code":"data_F1 <-mydata2$obs_data$F1 head(data_F1) #> # A tibble: 6 × 8 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 2 more variables: Observateurs <chr>, Scribe <chr> # recuperation des codes des traitements dans la colonne xp_trt_code data_F1$xp_trt_code <- startbox::remove_string_pairwise(vec=data_F1$plot_id,                                               pattern = data_F1$plot_block) #> [1] \"Strings extracted are : 10 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; TNT\"  head(data_F1) #> # A tibble: 6 × 9 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 3 more variables: Observateurs <chr>, Scribe <chr>, xp_trt_code <chr> obs_moda <- c(0,0,0,0,10,5,0,2,0,0,0,15,20,50) obs_tnt <- c(10,20,60,0,100,50,0,20,0,10,20,15,2,50)   startbox::incidence(obs_moda) #> [1] 42.85714 startbox::intensity(obs_moda) #> [1] 7.285714 startbox::severity_diseased(obs_moda) #> [1] 17  # l'efficacité est calculée en comparant une valeur dans une modalité à la valeur de la même variable obtentue dans le témoin non traité startbox::efficacy(startbox::incidence(obs_moda),          value_tnt = startbox::incidence(obs_tnt)) #> [1] 45.45455 F_I_placette <- startbox::resume_data(data_F1,                             var_col = \"PM_LEAF_PC\",                              group_cols = c(\"plot_id\",\"xp_trt_code\",\"plot_block\"),                             funs = list(frequence = startbox::incidence)) F_I_placette #>    plot_id xp_trt_code plot_block value  nb          calculation #> 1       A1           1          A    64 100 frequence PM_LEAF_PC #> 2      A10          10          A    44 100 frequence PM_LEAF_PC #> 3       A2           2          A    48 100 frequence PM_LEAF_PC #> 4       A3           3          A    49 100 frequence PM_LEAF_PC #> 5       A4           4          A    52 100 frequence PM_LEAF_PC #> 6       A5           5          A    44 100 frequence PM_LEAF_PC #> 7       A6           6          A    47 100 frequence PM_LEAF_PC #> 8       A7           7          A   100 100 frequence PM_LEAF_PC #> 9       A8           8          A    25 100 frequence PM_LEAF_PC #> 10      A9           9          A    64 100 frequence PM_LEAF_PC #> 11      B1           1          B    34 100 frequence PM_LEAF_PC #> 12     B10          10          B    56 100 frequence PM_LEAF_PC #> 13      B2           2          B    59 100 frequence PM_LEAF_PC #> 14      B3           3          B    61 100 frequence PM_LEAF_PC #> 15      B4           4          B    58 100 frequence PM_LEAF_PC #> 16      B5           5          B    94 100 frequence PM_LEAF_PC #> 17      B6           6          B    54 100 frequence PM_LEAF_PC #> 18      B7           7          B   100 100 frequence PM_LEAF_PC #> 19      B8           8          B    36 100 frequence PM_LEAF_PC #> 20      B9           9          B    48 100 frequence PM_LEAF_PC #> 21      C1           1          C    50 100 frequence PM_LEAF_PC #> 22     C10          10          C    81 100 frequence PM_LEAF_PC #> 23      C2           2          C    25 100 frequence PM_LEAF_PC #> 24      C3           3          C    66 100 frequence PM_LEAF_PC #> 25      C4           4          C    67 100 frequence PM_LEAF_PC #> 26      C5           5          C    34 100 frequence PM_LEAF_PC #> 27      C6           6          C    68 100 frequence PM_LEAF_PC #> 28      C7           7          C    63 100 frequence PM_LEAF_PC #> 29      C8           8          C    28 100 frequence PM_LEAF_PC #> 30      C9           9          C    43 100 frequence PM_LEAF_PC #> 31      D1           1          D    65 100 frequence PM_LEAF_PC #> 32     D10          10          D    90 100 frequence PM_LEAF_PC #> 33      D2           2          D    64 100 frequence PM_LEAF_PC #> 34      D3           3          D    46 100 frequence PM_LEAF_PC #> 35      D4           4          D    48 100 frequence PM_LEAF_PC #> 36      D5           5          D    66 100 frequence PM_LEAF_PC #> 37      D6           6          D   100 100 frequence PM_LEAF_PC #> 38      D7           7          D    57 100 frequence PM_LEAF_PC #> 39      D8           8          D    22 100 frequence PM_LEAF_PC #> 40      D9           9          D    23 100 frequence PM_LEAF_PC #> 41    TNT1         TNT          A   100 100 frequence PM_LEAF_PC #> 42    TNT2         TNT          B   100 100 frequence PM_LEAF_PC #> 43    TNT3         TNT          C   100 100 frequence PM_LEAF_PC #> 44    TNT4         TNT          D    95 100 frequence PM_LEAF_PC head(startbox::resume_pivot_wider(F_I_placette)) #> # A tibble: 6 × 5 #>   plot_id xp_trt_code plot_block    nb `frequence PM_LEAF_PC` #>   <chr>   <chr>       <chr>      <int>                  <dbl> #> 1 A1      1           A            100                     64 #> 2 A10     10          A            100                     44 #> 3 A2      2           A            100                     48 #> 4 A3      3           A            100                     49 #> 5 A4      4           A            100                     52 #> 6 A5      5           A            100                     44 F_moda <- startbox::resume_data(F_I_placette %>% dplyr::filter(calculation == \"frequence PM_LEAF_PC\"),                       var_col = \"value\",                       group_cols = c(\"xp_trt_code\"),                       funs = list(moyenne = mean, ecart_type = sd)) head(startbox::resume_pivot_wider(F_moda)) #> # A tibble: 6 × 4 #>   xp_trt_code    nb `moyenne frequence PM_LEAF_PC` ecart_type frequence PM_LEA…¹ #>   <chr>       <int>                          <dbl>                         <dbl> #> 1 1               4                           53.2                         14.5  #> 2 10              4                           67.8                         21.4  #> 3 2               4                           49                           17.3  #> 4 3               4                           55.5                          9.54 #> 5 4               4                           56.2                          8.26 #> 6 5               4                           59.5                         26.6  #> # ℹ abbreviated name: ¹​`ecart_type frequence PM_LEAF_PC` eff_par_placette <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy)) #> [1] \"4 TNT used for calculation of efficacy\" head(eff_par_placette) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC    98.75 35.18987  1 #> 2     A10 efficacite frequence PM_LEAF_PC    98.75 55.44304  1 #> 3      A2 efficacite frequence PM_LEAF_PC    98.75 51.39241  1 #> 4      A3 efficacite frequence PM_LEAF_PC    98.75 50.37975  1 #> 5      A4 efficacite frequence PM_LEAF_PC    98.75 47.34177  1 #> 6      A5 efficacite frequence PM_LEAF_PC    98.75 55.44304  1 df_plot_tnt <- data.frame(tnt_id=rep(paste0(\"TNT\",1:4),11),                           plot_id = sample(unique(F_I_placette$plot_id))) df_plot_tnt %>%   dplyr::mutate(tnt_id = dplyr::case_when(     plot_id == \"TNT1\" ~ \"TNT1\",     plot_id == \"TNT2\" ~ \"TNT2\",     plot_id == \"TNT3\" ~ \"TNT3\",     plot_id == \"TNT4\" ~ \"TNT4\",     TRUE ~ tnt_id,   )) -> df_plot_tnt  # visualisation de la table d'association head(df_plot_tnt) #>   tnt_id plot_id #> 1   TNT1     C10 #> 2   TNT2      B3 #> 3   TNT3      D3 #> 4   TNT4      C6 #> 5   TNT1      D1 #> 6   TNT2      B8 # calcul de l'efficacité en tenant compte de l'association de chaque placette avec son TNT eff_placette_tnt <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy),             df_tnt = df_plot_tnt) #> [1] \"1 TNT used for calculation of efficacy\" head(eff_placette_tnt) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC      100 36.00000  1 #> 2     A10 efficacite frequence PM_LEAF_PC      100 56.00000  1 #> 3      A2 efficacite frequence PM_LEAF_PC      100 52.00000  1 #> 4      A3 efficacite frequence PM_LEAF_PC       95 48.42105  1 #> 5      A4 efficacite frequence PM_LEAF_PC      100 48.00000  1 #> 6      A5 efficacite frequence PM_LEAF_PC       95 53.68421  1"},{"path":"/articles/startbox.html","id":"préparation-des-données-avant-analyse","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Préparation des données avant analyse","title":"startbox","text":"Pour analyser les données observées, il est nécessaire d’associer chaque placette à une modalité expérimentale. Si la table d’association entre les identifiants des placettes et les modalités n’existe pas, il est possible de décoder les identifiants des placettes pour en extraire la partie concernant le code de la modalité. Dans notre exemple, les identifiants de placette plot_id ont un codage du type “1A”, ou 1 est le code de la modalité, et le code du bloc. Les noms de bloc sont donnés dans la colonne plot_block La fonction remove_string_pairwise permet d’enlever le nom du bloc de plot_id. Avant de poursuivre, il est possible d’extraire quelques informations de plot_id pour enrichir notre tableau avec le code du traitement et le code du bloc. Caution Cette fonction est à utiliser avec précaution ! Dans tous les cas, il est préférable de compléter les feuilles placette et modalité dans le fichier standard. Cela permet en outre d’enrichir les données avec le nom des traitements et la position des placettes.","code":"# recuperation des codes des traitements dans la colonne xp_trt_code data_F1$xp_trt_code <- startbox::remove_string_pairwise(vec=data_F1$plot_id,                                               pattern = data_F1$plot_block) #> [1] \"Strings extracted are : 10 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; TNT\"  head(data_F1) #> # A tibble: 6 × 9 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 3 more variables: Observateurs <chr>, Scribe <chr>, xp_trt_code <chr>"},{"path":[]},{"path":"/articles/startbox.html","id":"par-décodage-des-identifiants-de-placette-non-recommandé","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Par décodage des identifiants de placette [non recommandé]","title":"startbox","text":"Si la table d’association entre les identifiants des placettes et les modalités n’existe pas, il est possible de décoder les identifiants des placettes pour en extraire la partie concernant le code de la modalité. Dans notre exemple, les identifiants de placette plot_id ont un codage du type “1A”, ou 1 est le code de la modalité, et le code du bloc. Les noms de bloc sont donnés dans la colonne plot_block La fonction remove_string_pairwise permet d’enlever le nom du bloc de plot_id. Avant de poursuivre, il est possible d’extraire quelques informations de plot_id pour enrichir notre tableau avec le code du traitement et le code du bloc. Caution Cette fonction est à utiliser avec précaution ! Dans tous les cas, il est préférable de compléter les feuilles placette et modalité dans le fichier standard. Cela permet en outre d’enrichir les données avec le nom des traitements et la position des placettes.","code":"# recuperation des codes des traitements dans la colonne xp_trt_code data_F1$xp_trt_code <- startbox::remove_string_pairwise(vec=data_F1$plot_id,                                               pattern = data_F1$plot_block) #> [1] \"Strings extracted are : 10 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; TNT\"  head(data_F1) #> # A tibble: 6 × 9 #>   PM_LEAF_PC bbch_stage plot_id plot_block observation_date experiment_id #>        <int> <chr>      <chr>   <chr>      <chr>            <chr>         #> 1          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 2          3 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 3          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 4          1 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 5          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> 6          2 BBCH 71    A10     A          17/06/2024       teisso_2024   #> # ℹ 3 more variables: Observateurs <chr>, Scribe <chr>, xp_trt_code <chr>"},{"path":"/articles/startbox.html","id":"fonctions-de-calcul","dir":"Articles","previous_headings":"","what":"Fonctions de calcul","title":"startbox","text":"Le tableau ci-dessous résume les fonctions intégrées au package :","code":"obs_moda <- c(0,0,0,0,10,5,0,2,0,0,0,15,20,50) obs_tnt <- c(10,20,60,0,100,50,0,20,0,10,20,15,2,50)   startbox::incidence(obs_moda) #> [1] 42.85714 startbox::intensity(obs_moda) #> [1] 7.285714 startbox::severity_diseased(obs_moda) #> [1] 17  # l'efficacité est calculée en comparant une valeur dans une modalité à la valeur de la même variable obtentue dans le témoin non traité startbox::efficacy(startbox::incidence(obs_moda),          value_tnt = startbox::incidence(obs_tnt)) #> [1] 45.45455"},{"path":"/articles/startbox.html","id":"description-des-fonctions","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Description des fonctions","title":"startbox","text":"Le tableau ci-dessous résume les fonctions intégrées au package :","code":""},{"path":"/articles/startbox.html","id":"exemples-de-calcul","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Exemples de calcul","title":"startbox","text":"","code":"obs_moda <- c(0,0,0,0,10,5,0,2,0,0,0,15,20,50) obs_tnt <- c(10,20,60,0,100,50,0,20,0,10,20,15,2,50)   startbox::incidence(obs_moda) #> [1] 42.85714 startbox::intensity(obs_moda) #> [1] 7.285714 startbox::severity_diseased(obs_moda) #> [1] 17  # l'efficacité est calculée en comparant une valeur dans une modalité à la valeur de la même variable obtentue dans le témoin non traité startbox::efficacy(startbox::incidence(obs_moda),          value_tnt = startbox::incidence(obs_tnt)) #> [1] 45.45455"},{"path":"/articles/startbox.html","id":"calcul-de-la-fréquence-et-de-lintensité-dattaque-à-partir-dun-jeu-de-données-dobservations","dir":"Articles","previous_headings":"","what":"Calcul de la fréquence et de l’intensité d’attaque à partir d’un jeu de données d’observations","title":"startbox","text":"La fréquence et l’intensité d’attaque sont calculées par défaut à partir des données brutes avec la fonction resume_data(). Le paramètre group_cols permet de définir les colonnes qui regroupent les données entre elles. Dans l’exemple ci-dessous, calcule frequence et intensité d’attaque par plot_id (placette), sur la variable PM_LEAF_PC. Le résultat est un dataframe, incluant une colonne calculation qui précise le nom des fonctions appliquées sur la variable et une colonne value qui donne les valeurs calculées. Il est possible de passer un tableau résumé en format “wide” avec la fonction resume_pivot_wider. Une fois le calcul fait par placette, il est possible de faire la moyenne par modalité. Il suffit de réappliquer la fonction resume_data sur le tableau précédent en demandant un calcul de moyenne avec la fonction mean, que l’peut compléter par le calcul de l’écart-type avec la fonction sd. Ici le calcul est fait uniquement sur la fréquence pour rendre plus lisible l’affichage. Avec la même logique, il est possible de faire le calcul par bloc.","code":"F_I_placette <- startbox::resume_data(data_F1,                             var_col = \"PM_LEAF_PC\",                              group_cols = c(\"plot_id\",\"xp_trt_code\",\"plot_block\"),                             funs = list(frequence = startbox::incidence)) F_I_placette #>    plot_id xp_trt_code plot_block value  nb          calculation #> 1       A1           1          A    64 100 frequence PM_LEAF_PC #> 2      A10          10          A    44 100 frequence PM_LEAF_PC #> 3       A2           2          A    48 100 frequence PM_LEAF_PC #> 4       A3           3          A    49 100 frequence PM_LEAF_PC #> 5       A4           4          A    52 100 frequence PM_LEAF_PC #> 6       A5           5          A    44 100 frequence PM_LEAF_PC #> 7       A6           6          A    47 100 frequence PM_LEAF_PC #> 8       A7           7          A   100 100 frequence PM_LEAF_PC #> 9       A8           8          A    25 100 frequence PM_LEAF_PC #> 10      A9           9          A    64 100 frequence PM_LEAF_PC #> 11      B1           1          B    34 100 frequence PM_LEAF_PC #> 12     B10          10          B    56 100 frequence PM_LEAF_PC #> 13      B2           2          B    59 100 frequence PM_LEAF_PC #> 14      B3           3          B    61 100 frequence PM_LEAF_PC #> 15      B4           4          B    58 100 frequence PM_LEAF_PC #> 16      B5           5          B    94 100 frequence PM_LEAF_PC #> 17      B6           6          B    54 100 frequence PM_LEAF_PC #> 18      B7           7          B   100 100 frequence PM_LEAF_PC #> 19      B8           8          B    36 100 frequence PM_LEAF_PC #> 20      B9           9          B    48 100 frequence PM_LEAF_PC #> 21      C1           1          C    50 100 frequence PM_LEAF_PC #> 22     C10          10          C    81 100 frequence PM_LEAF_PC #> 23      C2           2          C    25 100 frequence PM_LEAF_PC #> 24      C3           3          C    66 100 frequence PM_LEAF_PC #> 25      C4           4          C    67 100 frequence PM_LEAF_PC #> 26      C5           5          C    34 100 frequence PM_LEAF_PC #> 27      C6           6          C    68 100 frequence PM_LEAF_PC #> 28      C7           7          C    63 100 frequence PM_LEAF_PC #> 29      C8           8          C    28 100 frequence PM_LEAF_PC #> 30      C9           9          C    43 100 frequence PM_LEAF_PC #> 31      D1           1          D    65 100 frequence PM_LEAF_PC #> 32     D10          10          D    90 100 frequence PM_LEAF_PC #> 33      D2           2          D    64 100 frequence PM_LEAF_PC #> 34      D3           3          D    46 100 frequence PM_LEAF_PC #> 35      D4           4          D    48 100 frequence PM_LEAF_PC #> 36      D5           5          D    66 100 frequence PM_LEAF_PC #> 37      D6           6          D   100 100 frequence PM_LEAF_PC #> 38      D7           7          D    57 100 frequence PM_LEAF_PC #> 39      D8           8          D    22 100 frequence PM_LEAF_PC #> 40      D9           9          D    23 100 frequence PM_LEAF_PC #> 41    TNT1         TNT          A   100 100 frequence PM_LEAF_PC #> 42    TNT2         TNT          B   100 100 frequence PM_LEAF_PC #> 43    TNT3         TNT          C   100 100 frequence PM_LEAF_PC #> 44    TNT4         TNT          D    95 100 frequence PM_LEAF_PC head(startbox::resume_pivot_wider(F_I_placette)) #> # A tibble: 6 × 5 #>   plot_id xp_trt_code plot_block    nb `frequence PM_LEAF_PC` #>   <chr>   <chr>       <chr>      <int>                  <dbl> #> 1 A1      1           A            100                     64 #> 2 A10     10          A            100                     44 #> 3 A2      2           A            100                     48 #> 4 A3      3           A            100                     49 #> 5 A4      4           A            100                     52 #> 6 A5      5           A            100                     44 F_moda <- startbox::resume_data(F_I_placette %>% dplyr::filter(calculation == \"frequence PM_LEAF_PC\"),                       var_col = \"value\",                       group_cols = c(\"xp_trt_code\"),                       funs = list(moyenne = mean, ecart_type = sd)) head(startbox::resume_pivot_wider(F_moda)) #> # A tibble: 6 × 4 #>   xp_trt_code    nb `moyenne frequence PM_LEAF_PC` ecart_type frequence PM_LEA…¹ #>   <chr>       <int>                          <dbl>                         <dbl> #> 1 1               4                           53.2                         14.5  #> 2 10              4                           67.8                         21.4  #> 3 2               4                           49                           17.3  #> 4 3               4                           55.5                          9.54 #> 5 4               4                           56.2                          8.26 #> 6 5               4                           59.5                         26.6  #> # ℹ abbreviated name: ¹​`ecart_type frequence PM_LEAF_PC`"},{"path":"/articles/startbox.html","id":"calcul-par-placette","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Calcul par placette","title":"startbox","text":"Il est possible de passer un tableau résumé en format “wide” avec la fonction resume_pivot_wider.","code":"F_I_placette <- startbox::resume_data(data_F1,                             var_col = \"PM_LEAF_PC\",                              group_cols = c(\"plot_id\",\"xp_trt_code\",\"plot_block\"),                             funs = list(frequence = startbox::incidence)) F_I_placette #>    plot_id xp_trt_code plot_block value  nb          calculation #> 1       A1           1          A    64 100 frequence PM_LEAF_PC #> 2      A10          10          A    44 100 frequence PM_LEAF_PC #> 3       A2           2          A    48 100 frequence PM_LEAF_PC #> 4       A3           3          A    49 100 frequence PM_LEAF_PC #> 5       A4           4          A    52 100 frequence PM_LEAF_PC #> 6       A5           5          A    44 100 frequence PM_LEAF_PC #> 7       A6           6          A    47 100 frequence PM_LEAF_PC #> 8       A7           7          A   100 100 frequence PM_LEAF_PC #> 9       A8           8          A    25 100 frequence PM_LEAF_PC #> 10      A9           9          A    64 100 frequence PM_LEAF_PC #> 11      B1           1          B    34 100 frequence PM_LEAF_PC #> 12     B10          10          B    56 100 frequence PM_LEAF_PC #> 13      B2           2          B    59 100 frequence PM_LEAF_PC #> 14      B3           3          B    61 100 frequence PM_LEAF_PC #> 15      B4           4          B    58 100 frequence PM_LEAF_PC #> 16      B5           5          B    94 100 frequence PM_LEAF_PC #> 17      B6           6          B    54 100 frequence PM_LEAF_PC #> 18      B7           7          B   100 100 frequence PM_LEAF_PC #> 19      B8           8          B    36 100 frequence PM_LEAF_PC #> 20      B9           9          B    48 100 frequence PM_LEAF_PC #> 21      C1           1          C    50 100 frequence PM_LEAF_PC #> 22     C10          10          C    81 100 frequence PM_LEAF_PC #> 23      C2           2          C    25 100 frequence PM_LEAF_PC #> 24      C3           3          C    66 100 frequence PM_LEAF_PC #> 25      C4           4          C    67 100 frequence PM_LEAF_PC #> 26      C5           5          C    34 100 frequence PM_LEAF_PC #> 27      C6           6          C    68 100 frequence PM_LEAF_PC #> 28      C7           7          C    63 100 frequence PM_LEAF_PC #> 29      C8           8          C    28 100 frequence PM_LEAF_PC #> 30      C9           9          C    43 100 frequence PM_LEAF_PC #> 31      D1           1          D    65 100 frequence PM_LEAF_PC #> 32     D10          10          D    90 100 frequence PM_LEAF_PC #> 33      D2           2          D    64 100 frequence PM_LEAF_PC #> 34      D3           3          D    46 100 frequence PM_LEAF_PC #> 35      D4           4          D    48 100 frequence PM_LEAF_PC #> 36      D5           5          D    66 100 frequence PM_LEAF_PC #> 37      D6           6          D   100 100 frequence PM_LEAF_PC #> 38      D7           7          D    57 100 frequence PM_LEAF_PC #> 39      D8           8          D    22 100 frequence PM_LEAF_PC #> 40      D9           9          D    23 100 frequence PM_LEAF_PC #> 41    TNT1         TNT          A   100 100 frequence PM_LEAF_PC #> 42    TNT2         TNT          B   100 100 frequence PM_LEAF_PC #> 43    TNT3         TNT          C   100 100 frequence PM_LEAF_PC #> 44    TNT4         TNT          D    95 100 frequence PM_LEAF_PC head(startbox::resume_pivot_wider(F_I_placette)) #> # A tibble: 6 × 5 #>   plot_id xp_trt_code plot_block    nb `frequence PM_LEAF_PC` #>   <chr>   <chr>       <chr>      <int>                  <dbl> #> 1 A1      1           A            100                     64 #> 2 A10     10          A            100                     44 #> 3 A2      2           A            100                     48 #> 4 A3      3           A            100                     49 #> 5 A4      4           A            100                     52 #> 6 A5      5           A            100                     44"},{"path":"/articles/startbox.html","id":"calcul-par-modalité","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Calcul par modalité","title":"startbox","text":"Une fois le calcul fait par placette, il est possible de faire la moyenne par modalité. Il suffit de réappliquer la fonction resume_data sur le tableau précédent en demandant un calcul de moyenne avec la fonction mean, que l’peut compléter par le calcul de l’écart-type avec la fonction sd. Ici le calcul est fait uniquement sur la fréquence pour rendre plus lisible l’affichage. Avec la même logique, il est possible de faire le calcul par bloc.","code":"F_moda <- startbox::resume_data(F_I_placette %>% dplyr::filter(calculation == \"frequence PM_LEAF_PC\"),                       var_col = \"value\",                       group_cols = c(\"xp_trt_code\"),                       funs = list(moyenne = mean, ecart_type = sd)) head(startbox::resume_pivot_wider(F_moda)) #> # A tibble: 6 × 4 #>   xp_trt_code    nb `moyenne frequence PM_LEAF_PC` ecart_type frequence PM_LEA…¹ #>   <chr>       <int>                          <dbl>                         <dbl> #> 1 1               4                           53.2                         14.5  #> 2 10              4                           67.8                         21.4  #> 3 2               4                           49                           17.3  #> 4 3               4                           55.5                          9.54 #> 5 4               4                           56.2                          8.26 #> 6 5               4                           59.5                         26.6  #> # ℹ abbreviated name: ¹​`ecart_type frequence PM_LEAF_PC`"},{"path":"/articles/startbox.html","id":"calcul-de-lefficacité","dir":"Articles","previous_headings":"","what":"Calcul de l’efficacité","title":"startbox","text":"Important L’efficacité se calcule sur l’intensité d’attaque ou sur la fréquence d’attaque. Il faut donc au préalable avoir réalisé ces calculs en utilisant la fonction resume_data. L’objectif est de calculer l’efficacité du traitement pour chaque placette, à la fois sur la fréquence et l’intensité d’attaque. Pour réaliser le calcul, nous allons donc appliquer la fonction efficacy sur les valeurs de fréquence et d’intensité calculées par placette précédemment avec la fonction resume_data, en regroupant par plot_id. Dans le cas le plus simple, l’efficacité de traitement est calculée pour chaque placette à partir de la moyenne de tous les TNT 1. Il s’agit du cas par défaut. Il est possible d’avoir des situations plus complexes, ou l’efficacité est calculée par rapport au TNT de chaque bloc, ou même selon une table d’association qui associe à chaque placette plot_id le TNT à prendre en référence, identifié dans ce cas par tnt_id (c’est à dire le plot_id pour le TNT).","code":"eff_par_placette <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy)) #> [1] \"4 TNT used for calculation of efficacy\" head(eff_par_placette) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC    98.75 35.18987  1 #> 2     A10 efficacite frequence PM_LEAF_PC    98.75 55.44304  1 #> 3      A2 efficacite frequence PM_LEAF_PC    98.75 51.39241  1 #> 4      A3 efficacite frequence PM_LEAF_PC    98.75 50.37975  1 #> 5      A4 efficacite frequence PM_LEAF_PC    98.75 47.34177  1 #> 6      A5 efficacite frequence PM_LEAF_PC    98.75 55.44304  1 df_plot_tnt <- data.frame(tnt_id=rep(paste0(\"TNT\",1:4),11),                           plot_id = sample(unique(F_I_placette$plot_id))) df_plot_tnt %>%   dplyr::mutate(tnt_id = dplyr::case_when(     plot_id == \"TNT1\" ~ \"TNT1\",     plot_id == \"TNT2\" ~ \"TNT2\",     plot_id == \"TNT3\" ~ \"TNT3\",     plot_id == \"TNT4\" ~ \"TNT4\",     TRUE ~ tnt_id,   )) -> df_plot_tnt  # visualisation de la table d'association head(df_plot_tnt) #>   tnt_id plot_id #> 1   TNT1     C10 #> 2   TNT2      B3 #> 3   TNT3      D3 #> 4   TNT4      C6 #> 5   TNT1      D1 #> 6   TNT2      B8 # calcul de l'efficacité en tenant compte de l'association de chaque placette avec son TNT eff_placette_tnt <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy),             df_tnt = df_plot_tnt) #> [1] \"1 TNT used for calculation of efficacy\" head(eff_placette_tnt) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC      100 36.00000  1 #> 2     A10 efficacite frequence PM_LEAF_PC      100 56.00000  1 #> 3      A2 efficacite frequence PM_LEAF_PC      100 52.00000  1 #> 4      A3 efficacite frequence PM_LEAF_PC       95 48.42105  1 #> 5      A4 efficacite frequence PM_LEAF_PC      100 48.00000  1 #> 6      A5 efficacite frequence PM_LEAF_PC       95 53.68421  1"},{"path":"/articles/startbox.html","id":"efficacité-calculée-à-partir-de-la-moyenne-de-tous-les-tnt","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Efficacité calculée à partir de la moyenne de tous les TNT","title":"startbox","text":"Dans le cas le plus simple, l’efficacité de traitement est calculée pour chaque placette à partir de la moyenne de tous les TNT 1. Il s’agit du cas par défaut.","code":"eff_par_placette <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy)) #> [1] \"4 TNT used for calculation of efficacy\" head(eff_par_placette) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC    98.75 35.18987  1 #> 2     A10 efficacite frequence PM_LEAF_PC    98.75 55.44304  1 #> 3      A2 efficacite frequence PM_LEAF_PC    98.75 51.39241  1 #> 4      A3 efficacite frequence PM_LEAF_PC    98.75 50.37975  1 #> 5      A4 efficacite frequence PM_LEAF_PC    98.75 47.34177  1 #> 6      A5 efficacite frequence PM_LEAF_PC    98.75 55.44304  1"},{"path":"/articles/startbox.html","id":"efficacité-calculée-à-laide-dune-table-dassociation","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Efficacité calculée à l’aide d’une table d’association","title":"startbox","text":"Il est possible d’avoir des situations plus complexes, ou l’efficacité est calculée par rapport au TNT de chaque bloc, ou même selon une table d’association qui associe à chaque placette plot_id le TNT à prendre en référence, identifié dans ce cas par tnt_id (c’est à dire le plot_id pour le TNT).","code":"df_plot_tnt <- data.frame(tnt_id=rep(paste0(\"TNT\",1:4),11),                           plot_id = sample(unique(F_I_placette$plot_id))) df_plot_tnt %>%   dplyr::mutate(tnt_id = dplyr::case_when(     plot_id == \"TNT1\" ~ \"TNT1\",     plot_id == \"TNT2\" ~ \"TNT2\",     plot_id == \"TNT3\" ~ \"TNT3\",     plot_id == \"TNT4\" ~ \"TNT4\",     TRUE ~ tnt_id,   )) -> df_plot_tnt  # visualisation de la table d'association head(df_plot_tnt) #>   tnt_id plot_id #> 1   TNT1     C10 #> 2   TNT2      B3 #> 3   TNT3      D3 #> 4   TNT4      C6 #> 5   TNT1      D1 #> 6   TNT2      B8 # calcul de l'efficacité en tenant compte de l'association de chaque placette avec son TNT eff_placette_tnt <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy),             df_tnt = df_plot_tnt) #> [1] \"1 TNT used for calculation of efficacy\" head(eff_placette_tnt) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC      100 36.00000  1 #> 2     A10 efficacite frequence PM_LEAF_PC      100 56.00000  1 #> 3      A2 efficacite frequence PM_LEAF_PC      100 52.00000  1 #> 4      A3 efficacite frequence PM_LEAF_PC       95 48.42105  1 #> 5      A4 efficacite frequence PM_LEAF_PC      100 48.00000  1 #> 6      A5 efficacite frequence PM_LEAF_PC       95 53.68421  1"},{"path":"/articles/startbox.html","id":"génération-dune-table-dassociation","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Génération d’une table d’association","title":"startbox","text":"","code":"df_plot_tnt <- data.frame(tnt_id=rep(paste0(\"TNT\",1:4),11),                           plot_id = sample(unique(F_I_placette$plot_id))) df_plot_tnt %>%   dplyr::mutate(tnt_id = dplyr::case_when(     plot_id == \"TNT1\" ~ \"TNT1\",     plot_id == \"TNT2\" ~ \"TNT2\",     plot_id == \"TNT3\" ~ \"TNT3\",     plot_id == \"TNT4\" ~ \"TNT4\",     TRUE ~ tnt_id,   )) -> df_plot_tnt  # visualisation de la table d'association head(df_plot_tnt) #>   tnt_id plot_id #> 1   TNT1     C10 #> 2   TNT2      B3 #> 3   TNT3      D3 #> 4   TNT4      C6 #> 5   TNT1      D1 #> 6   TNT2      B8"},{"path":"/articles/startbox.html","id":"calcul-de-lefficacité-avec-la-table-dassociation","dir":"Articles","previous_headings":"Calculer les tableaux de résumé","what":"Calcul de l’efficacité avec la table d’association","title":"startbox","text":"","code":"# calcul de l'efficacité en tenant compte de l'association de chaque placette avec son TNT eff_placette_tnt <- startbox::resume_data(F_I_placette,             var_col = \"value\",             group_cols = c(\"plot_id\"),             funs=list(efficacite=startbox::efficacy),             df_tnt = df_plot_tnt) #> [1] \"1 TNT used for calculation of efficacy\" head(eff_placette_tnt) #>   plot_id                     calculation mean_tnt    value nb #> 1      A1 efficacite frequence PM_LEAF_PC      100 36.00000  1 #> 2     A10 efficacite frequence PM_LEAF_PC      100 56.00000  1 #> 3      A2 efficacite frequence PM_LEAF_PC      100 52.00000  1 #> 4      A3 efficacite frequence PM_LEAF_PC       95 48.42105  1 #> 5      A4 efficacite frequence PM_LEAF_PC      100 48.00000  1 #> 6      A5 efficacite frequence PM_LEAF_PC       95 53.68421  1"},{"path":"/articles/startbox.html","id":"réaliser-lanalyse-statistique","dir":"Articles","previous_headings":"","what":"Réaliser l’analyse statistique","title":"startbox","text":"Le package {startbox} propose des fonctions pour appliquer automatiquement des tests statistiques (ANOVA, Kruskal-Wallis) sur les variables observées. La fonction test_stats() permet de comparer les modalités de traitement en fonction de la variable d’intérêt. Elle retourne le test utilisé, la p_valeur du test et les groupes des modalites dans le dataframe.","code":"## tableau bilan sur la fréquence F_plot <- startbox::resume_data(data_F1,                             var_col = \"PM_LEAF_PC\",                              group_cols = c(\"plot_id\",\"xp_trt_code\",\"plot_block\"),                             funs = list(frequence = startbox::incidence, intensité = startbox::intensity))  startbox::test_stats(data = F_plot, value_col = \"value\") #> [frequence PM_LEAF_PC] Shapiro p =0.449 | Bartlett p =0.07 #> [intensité PM_LEAF_PC] Shapiro p =0.034 | Bartlett p =0.001 #>    modality mean_frequence groups_frequence mean_intensité groups_intensité #> 11      TNT          98.75                a         3.5750                a #> 8         7          80.00               ab         2.8400               ab #> 2        10          67.75               bc         1.9875              abc #> 7         6          67.25               bc         2.1000              abc #> 1         1          53.25               bc         1.3175              bcd #> 4         3          55.50               bc         1.2025              bcd #> 5         4          56.25               bc         1.3350              bcd #> 6         5          59.50               bc         1.6400              bcd #> 3         2          49.00               bc         1.0825              cde #> 10        9          44.50               bc         0.8725               de #> 9         8          27.75                c         0.5600                e"},{"path":"/articles/startbox.html","id":"réaliser-les-graphiques","dir":"Articles","previous_headings":"","what":"Réaliser les graphiques","title":"startbox","text":"Les données résumées ou les résultats statistiques peuvent être visualisés sous forme de barplots ou de heatmaps pour une meilleure lecture des différences entre modalités. Pour la réalisation de la heatmap il est nécessaire d’utiliser la fonction merge_data_metadata car il faut joindre toutes les données du fichiers (metadata et feuille “data_”). Pour les autres graphiques c’est aussi intéressant pour obtenir des informations plus précises sur les modalités par exemple. La fonction plot_xpbar permet de réaliser un graphique classique, dit “en batons”.  La fonction plot_xpheat permet de visualiser l’intensité ou la fréquence d’attaque directement sur une carte thermique, en représentant les valeurs par placette sous forme de couleurs. Cela facilite l’identification des zones les plus touchées ou les effets spatiaux éventuels dans la parcelle.  La fonction plot_xpbox() permet de visualiser la répartition des valeurs observées pour chaque modalité sous forme de boîtes à moustaches. Ce type de graphique est particulièrement utile pour : - évaluer la dispersion des observations, - identifier les valeurs extrêmes ou atypiques, - comparer visuellement les distributions entre modalités.","code":"df_complet <- merge(F_plot, mydata2$metadata$moda_desc, all.x=T) df_complet <- merge(df_complet, mydata2$metadata$plot_desc, all.x=T) df_complet #>    xp_trt_code plot_id plot_block  value  nb          calculation #> 1            1      A1          A  64.00 100 frequence PM_LEAF_PC #> 2            1      A1          A   1.73 100 intensité PM_LEAF_PC #> 3            1      B1          B   0.64 100 intensité PM_LEAF_PC #> 4            1      B1          B  34.00 100 frequence PM_LEAF_PC #> 5            1      C1          C  50.00 100 frequence PM_LEAF_PC #> 6            1      C1          C   1.44 100 intensité PM_LEAF_PC #> 7            1      D1          D  65.00 100 frequence PM_LEAF_PC #> 8            1      D1          D   1.46 100 intensité PM_LEAF_PC #> 9           10     A10          A  44.00 100 frequence PM_LEAF_PC #> 10          10     A10          A   1.04 100 intensité PM_LEAF_PC #> 11          10     B10          B   0.99 100 intensité PM_LEAF_PC #> 12          10     B10          B  56.00 100 frequence PM_LEAF_PC #> 13          10     C10          C  81.00 100 frequence PM_LEAF_PC #> 14          10     C10          C   3.05 100 intensité PM_LEAF_PC #> 15          10     D10          D  90.00 100 frequence PM_LEAF_PC #> 16          10     D10          D   2.87 100 intensité PM_LEAF_PC #> 17           2      A2          A   0.91 100 intensité PM_LEAF_PC #> 18           2      A2          A  48.00 100 frequence PM_LEAF_PC #> 19           2      B2          B   1.46 100 intensité PM_LEAF_PC #> 20           2      B2          B  59.00 100 frequence PM_LEAF_PC #> 21           2      C2          C   0.45 100 intensité PM_LEAF_PC #> 22           2      C2          C  25.00 100 frequence PM_LEAF_PC #> 23           2      D2          D   1.51 100 intensité PM_LEAF_PC #> 24           2      D2          D  64.00 100 frequence PM_LEAF_PC #> 25           3      A3          A  49.00 100 frequence PM_LEAF_PC #> 26           3      A3          A   1.00 100 intensité PM_LEAF_PC #> 27           3      B3          B  61.00 100 frequence PM_LEAF_PC #> 28           3      B3          B   1.24 100 intensité PM_LEAF_PC #> 29           3      C3          C   1.65 100 intensité PM_LEAF_PC #> 30           3      C3          C  66.00 100 frequence PM_LEAF_PC #> 31           3      D3          D  46.00 100 frequence PM_LEAF_PC #> 32           3      D3          D   0.92 100 intensité PM_LEAF_PC #> 33           4      A4          A  52.00 100 frequence PM_LEAF_PC #> 34           4      A4          A   1.23 100 intensité PM_LEAF_PC #> 35           4      B4          B  58.00 100 frequence PM_LEAF_PC #> 36           4      B4          B   1.57 100 intensité PM_LEAF_PC #> 37           4      C4          C   1.47 100 intensité PM_LEAF_PC #> 38           4      C4          C  67.00 100 frequence PM_LEAF_PC #> 39           4      D4          D  48.00 100 frequence PM_LEAF_PC #> 40           4      D4          D   1.07 100 intensité PM_LEAF_PC #> 41           5      A5          A  44.00 100 frequence PM_LEAF_PC #> 42           5      A5          A   0.84 100 intensité PM_LEAF_PC #> 43           5      B5          B  94.00 100 frequence PM_LEAF_PC #> 44           5      B5          B   3.33 100 intensité PM_LEAF_PC #> 45           5      C5          C  34.00 100 frequence PM_LEAF_PC #> 46           5      C5          C   0.62 100 intensité PM_LEAF_PC #> 47           5      D5          D   1.77 100 intensité PM_LEAF_PC #> 48           5      D5          D  66.00 100 frequence PM_LEAF_PC #> 49           6      A6          A  47.00 100 frequence PM_LEAF_PC #> 50           6      A6          A   0.94 100 intensité PM_LEAF_PC #> 51           6      B6          B  54.00 100 frequence PM_LEAF_PC #> 52           6      B6          B   1.43 100 intensité PM_LEAF_PC #> 53           6      C6          C  68.00 100 frequence PM_LEAF_PC #> 54           6      C6          C   1.93 100 intensité PM_LEAF_PC #> 55           6      D6          D   4.10 100 intensité PM_LEAF_PC #> 56           6      D6          D 100.00 100 frequence PM_LEAF_PC #> 57           7      A7          A   3.29 100 intensité PM_LEAF_PC #> 58           7      A7          A 100.00 100 frequence PM_LEAF_PC #> 59           7      B7          B 100.00 100 frequence PM_LEAF_PC #> 60           7      B7          B   5.45 100 intensité PM_LEAF_PC #> 61           7      C7          C  63.00 100 frequence PM_LEAF_PC #> 62           7      C7          C   1.47 100 intensité PM_LEAF_PC #> 63           7      D7          D   1.15 100 intensité PM_LEAF_PC #> 64           7      D7          D  57.00 100 frequence PM_LEAF_PC #> 65           8      A8          A  25.00 100 frequence PM_LEAF_PC #> 66           8      A8          A   0.44 100 intensité PM_LEAF_PC #> 67           8      B8          B  36.00 100 frequence PM_LEAF_PC #> 68           8      B8          B   0.76 100 intensité PM_LEAF_PC #> 69           8      C8          C  28.00 100 frequence PM_LEAF_PC #> 70           8      C8          C   0.52 100 intensité PM_LEAF_PC #> 71           8      D8          D   0.52 100 intensité PM_LEAF_PC #> 72           8      D8          D  22.00 100 frequence PM_LEAF_PC #> 73           9      A9          A   1.38 100 intensité PM_LEAF_PC #> 74           9      A9          A  64.00 100 frequence PM_LEAF_PC #> 75           9      B9          B  48.00 100 frequence PM_LEAF_PC #> 76           9      B9          B   0.81 100 intensité PM_LEAF_PC #> 77           9      C9          C  43.00 100 frequence PM_LEAF_PC #> 78           9      C9          C   0.84 100 intensité PM_LEAF_PC #> 79           9      D9          D  23.00 100 frequence PM_LEAF_PC #> 80           9      D9          D   0.46 100 intensité PM_LEAF_PC #> 81         TNT    TNT1          A   4.76 100 intensité PM_LEAF_PC #> 82         TNT    TNT1          A 100.00 100 frequence PM_LEAF_PC #> 83         TNT    TNT2          B 100.00 100 frequence PM_LEAF_PC #> 84         TNT    TNT2          B   2.82 100 intensité PM_LEAF_PC #> 85         TNT    TNT3          C   3.46 100 intensité PM_LEAF_PC #> 86         TNT    TNT3          C 100.00 100 frequence PM_LEAF_PC #> 87         TNT    TNT4          D   3.26 100 intensité PM_LEAF_PC #> 88         TNT    TNT4          D  95.00 100 frequence PM_LEAF_PC #>           xp_trt_name                      xp_trt_desc plot_x plot_y plot_n #> 1       Cuivre tardif cuivre 2 semains après symptômes      2      1      7 #> 2       Cuivre tardif cuivre 2 semains après symptômes      2      1      7 #> 3       Cuivre tardif cuivre 2 semains après symptômes      2     22      7 #> 4       Cuivre tardif cuivre 2 semains après symptômes      2     22      7 #> 5       Cuivre tardif cuivre 2 semains après symptômes      1     11      7 #> 6       Cuivre tardif cuivre 2 semains après symptômes      1     11      7 #> 7       Cuivre tardif cuivre 2 semains après symptômes      1     16      7 #> 8       Cuivre tardif cuivre 2 semains après symptômes      1     16      7 #> 9  Tanins chataignier                             <NA>      2     10      7 #> 10 Tanins chataignier                             <NA>      2     10      7 #> 11 Tanins chataignier                             <NA>      2     21      7 #> 12 Tanins chataignier                             <NA>      2     21      7 #> 13 Tanins chataignier                             <NA>      1      6      7 #> 14 Tanins chataignier                             <NA>      1      6      7 #> 15 Tanins chataignier                             <NA>      1     15      6 #> 16 Tanins chataignier                             <NA>      1     15      6 #> 17            Cuivre      cuivre à partir de symptômes      2      6      7 #> 18            Cuivre      cuivre à partir de symptômes      2      6      7 #> 19            Cuivre      cuivre à partir de symptômes      2     18      7 #> 20            Cuivre      cuivre à partir de symptômes      2     18      7 #> 21            Cuivre      cuivre à partir de symptômes      1      1      7 #> 22            Cuivre      cuivre à partir de symptômes      1      1      7 #> 23            Cuivre      cuivre à partir de symptômes      1     12      7 #> 24            Cuivre      cuivre à partir de symptômes      1     12      7 #> 25     Cuivre précoce                             <NA>      2      4      6 #> 26     Cuivre précoce                             <NA>      2      4      6 #> 27     Cuivre précoce                             <NA>      2     16      7 #> 28     Cuivre précoce                             <NA>      2     16      7 #> 29     Cuivre précoce                             <NA>      1     10      7 #> 30     Cuivre précoce                             <NA>      1     10      7 #> 31     Cuivre précoce                             <NA>      1     20      7 #> 32     Cuivre précoce                             <NA>      1     20      7 #> 33              Roméo                             <NA>      2     11      7 #> 34              Roméo                             <NA>      2     11      7 #> 35              Roméo                             <NA>      2     17      7 #> 36              Roméo                             <NA>      2     17      7 #> 37              Roméo                             <NA>      1      7      7 #> 38              Roméo                             <NA>      1      7      7 #> 39              Roméo                             <NA>      1     21      7 #> 40              Roméo                             <NA>      1     21      7 #> 41           Limocide                             <NA>      2      8      6 #> 42           Limocide                             <NA>      2      8      6 #> 43           Limocide                             <NA>      2     12      7 #> 44           Limocide                             <NA>      2     12      7 #> 45           Limocide                             <NA>      1      3      7 #> 46           Limocide                             <NA>      1      3      7 #> 47           Limocide                             <NA>      1     19      7 #> 48           Limocide                             <NA>      1     19      7 #> 49            Belvine                             <NA>      2      3      7 #> 50            Belvine                             <NA>      2      3      7 #> 51            Belvine                             <NA>      2     20      7 #> 52            Belvine                             <NA>      2     20      7 #> 53            Belvine                             <NA>      1      9      7 #> 54            Belvine                             <NA>      1      9      7 #> 55            Belvine                             <NA>      1     14      6 #> 56            Belvine                             <NA>      1     14      6 #> 57    Salix/Equisetum                             <NA>      2      9      6 #> 58    Salix/Equisetum                             <NA>      2      9      6 #> 59    Salix/Equisetum                             <NA>      2     15      7 #> 60    Salix/Equisetum                             <NA>      2     15      7 #> 61    Salix/Equisetum                             <NA>      1      5      6 #> 62    Salix/Equisetum                             <NA>      1      5      6 #> 63    Salix/Equisetum                             <NA>      1     22      7 #> 64    Salix/Equisetum                             <NA>      1     22      7 #> 65             Esseva                             <NA>      2      2      6 #> 66             Esseva                             <NA>      2      2      6 #> 67             Esseva                             <NA>      2     13      6 #> 68             Esseva                             <NA>      2     13      6 #> 69             Esseva                             <NA>      1      8      7 #> 70             Esseva                             <NA>      1      8      7 #> 71             Esseva                             <NA>      1     17      7 #> 72             Esseva                             <NA>      1     17      7 #> 73            Mimetic                             <NA>      2      7      7 #> 74            Mimetic                             <NA>      2      7      7 #> 75            Mimetic                             <NA>      2     14      6 #> 76            Mimetic                             <NA>      2     14      6 #> 77            Mimetic                             <NA>      1      4      7 #> 78            Mimetic                             <NA>      1      4      7 #> 79            Mimetic                             <NA>      1     18      7 #> 80            Mimetic                             <NA>      1     18      7 #> 81  Témoin non traité                             <NA>      2      5      5 #> 82  Témoin non traité                             <NA>      2      5      5 #> 83  Témoin non traité                             <NA>      2     19      7 #> 84  Témoin non traité                             <NA>      2     19      7 #> 85  Témoin non traité                             <NA>      1      2      7 #> 86  Témoin non traité                             <NA>      1      2      7 #> 87  Témoin non traité                             <NA>      1     13      5 #> 88  Témoin non traité                             <NA>      1     13      5 #>    plot_descstartbox::plot_xpbar(df_complet,xcol=\"xp_trt_code\",ycol=\"value\",fillcol=\"calculation\",show_errorbar = T) #> Warning: The dot-dot notation (`..y..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead. #> ℹ The deprecated feature was likely used in the startbox package. #>   Please report the issue to the authors. startbox::plot_xpheat(df_complet, variable = \"value\", caption = \"IFV\") startbox::plot_xpbox(df_complet, calculation_type = \"frequence\", show_dots = TRUE)"},{"path":"/articles/startbox.html","id":"barplot","dir":"Articles","previous_headings":"","what":"Barplot","title":"startbox","text":"La fonction plot_xpbar permet de réaliser un graphique classique, dit “en batons”.","code":"startbox::plot_xpbar(df_complet,xcol=\"xp_trt_code\",ycol=\"value\",fillcol=\"calculation\",show_errorbar = T) #> Warning: The dot-dot notation (`..y..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead. #> ℹ The deprecated feature was likely used in the startbox package. #>   Please report the issue to the authors."},{"path":"/articles/startbox.html","id":"heatmap","dir":"Articles","previous_headings":"","what":"Heatmap","title":"startbox","text":"La fonction plot_xpheat permet de visualiser l’intensité ou la fréquence d’attaque directement sur une carte thermique, en représentant les valeurs par placette sous forme de couleurs. Cela facilite l’identification des zones les plus touchées ou les effets spatiaux éventuels dans la parcelle.","code":"startbox::plot_xpheat(df_complet, variable = \"value\", caption = \"IFV\")"},{"path":"/articles/startbox.html","id":"boxplot","dir":"Articles","previous_headings":"","what":"Boxplot","title":"startbox","text":"La fonction plot_xpbox() permet de visualiser la répartition des valeurs observées pour chaque modalité sous forme de boîtes à moustaches. Ce type de graphique est particulièrement utile pour : - évaluer la dispersion des observations, - identifier les valeurs extrêmes ou atypiques, - comparer visuellement les distributions entre modalités.","code":"startbox::plot_xpbox(df_complet, calculation_type = \"frequence\", show_dots = TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Auteur·rice·s","title":"Auteur·rice·s et Citation","text":"Xavier Delpuech. Auteur·rice, mainteneur·se. Hervé Maire. Auteur·rice. Anne-Sophie Chazalmartin. Auteur·rice. Institut Français de la Vigne et du Vin. Titulaire des droits d'auteur.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Auteur·rice·s et Citation","text":"Delpuech X, Maire H, Chazalmartin (2025). startbox: visualisation standardization experimental data plant protection. R package version 0.0.0.9000.","code":"@Manual{,   title = {startbox: visualisation and standardization of experimental data in plant protection},   author = {Xavier Delpuech and Hervé Maire and Anne-Sophie Chazalmartin},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"startbox","dir":"","previous_headings":"","what":"visualisation and standardization of experimental data in plant protection","title":"visualisation and standardization of experimental data in plant protection","text":"goal startbox manage visualize experimental data plant protection trials. R package developped part STAR project 2024-2027 (France), support French Ministry Agriculture Food, financial contribution special allocation account agricultural rural development (CASDAR). responsability French Ministry Agriculture Food engaged.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"visualisation and standardization of experimental data in plant protection","text":"can install development version startbox GitHub : also want install vignette (serves tutorial package), run installation: installed, can access vignette :","code":"#install.packages(\"devtools\")  # if not already installed devtools::install_github(\"vignevin/startbox\") devtools::install(build_vignettes = TRUE) vignette(\"startbox\") #> démarrage du serveur d'aide httpd ... fini"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"visualisation and standardization of experimental data in plant protection","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"#library(startbox) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"visualisation and standardization of experimental data in plant protection","text":"can contribute projetc project creating pull request, use issues track bugs suggest ideas repository.","code":""},{"path":"/reference/check_topvigne_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a CSV file is in TopVigne format — check_topvigne_csv","title":"Check if a CSV file is in TopVigne format — check_topvigne_csv","text":"function reads .csv file checks whether contains minimum required columns considered valid TopVigne file.","code":""},{"path":"/reference/check_topvigne_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Check if a CSV file is in TopVigne format — check_topvigne_csv","text":"","code":"check_topvigne_csv(filepath)"},{"path":"/reference/check_topvigne_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a CSV file is in TopVigne format — check_topvigne_csv","text":"filepath Path .csv file check.","code":""},{"path":"/reference/check_topvigne_csv.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Check if a CSV file is in TopVigne format — check_topvigne_csv","text":"Logical. Returns TRUE file valid. Stops execution error message otherwise.","code":""},{"path":"/reference/combine_and_reorder_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine and Reorder Observation Data — combine_and_reorder_obs","title":"Combine and Reorder Observation Data — combine_and_reorder_obs","text":"Combines observation datasets single dataframe reorders columns follow standard structure.","code":""},{"path":"/reference/combine_and_reorder_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Combine and Reorder Observation Data — combine_and_reorder_obs","text":"","code":"combine_and_reorder_obs(obs_data)"},{"path":"/reference/combine_and_reorder_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine and Reorder Observation Data — combine_and_reorder_obs","text":"obs_data named list harmonized observation dataframes. element contain least standard columns like plot_id, bbch_stage, etc.","code":""},{"path":"/reference/combine_and_reorder_obs.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Combine and Reorder Observation Data — combine_and_reorder_obs","text":"single combined dataframe standard columns (observation_date, bbch_stage, plot_id) appearing first, followed columns original order.","code":""},{"path":"/reference/combine_and_reorder_obs.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Combine and Reorder Observation Data — combine_and_reorder_obs","text":"function typically used harmonizing observation datasets. Columns template list retained placed standard ones. final output useful exporting merging trial data.","code":""},{"path":"/reference/efficacy.html","id":null,"dir":"Reference","previous_headings":"","what":"calcul efficacy — efficacy","title":"calcul efficacy — efficacy","text":"function calculate treatment efficacy. Efficacy level reduction target harmful organisms damage caused plant, application treatment, compared untreated control. Efficacy expressed percentage.","code":""},{"path":"/reference/efficacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"calcul efficacy — efficacy","text":"","code":"efficacy(value, value_tnt)"},{"path":"/reference/efficacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calcul efficacy — efficacy","text":"value numeric value value_tnt numeric value TNT","code":""},{"path":"/reference/export_data_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Export observation sheets into a new Excel file version — export_data_sheets","title":"Export observation sheets into a new Excel file version — export_data_sheets","text":"Exports observation data stored obs_data slot user_data object new Excel file. Existing \"data_*\" sheets replaced, new ones added. resulting file saved Downloads folder automatically generated timestamp filename. function also updates internal Excel file path logs export operations traceability system.","code":""},{"path":"/reference/export_data_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Export observation sheets into a new Excel file version — export_data_sheets","text":"","code":"export_data_sheets(self)"},{"path":"/reference/export_data_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export observation sheets into a new Excel file version — export_data_sheets","text":"self user_data R6 object containing observation data active Excel file path.","code":""},{"path":"/reference/export_data_sheets.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Export observation sheets into a new Excel file version — export_data_sheets","text":"Invisibly returns full path exported Excel file.","code":""},{"path":"/reference/get_template_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"get_template_excel — get_template_excel","title":"get_template_excel — get_template_excel","text":"get_template_excel","code":""},{"path":"/reference/get_template_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"get_template_excel — get_template_excel","text":"","code":"get_template_excel(destination_path = NULL)"},{"path":"/reference/get_template_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_template_excel — get_template_excel","text":"destination_path file path template saved","code":""},{"path":"/reference/harmonize_all_obs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize All Observation Data Tables — harmonize_all_obs_data","title":"Harmonize All Observation Data Tables — harmonize_all_obs_data","text":"Harmonizes observation datasets using harmonize_column_types().","code":""},{"path":"/reference/harmonize_all_obs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Harmonize All Observation Data Tables — harmonize_all_obs_data","text":"","code":"harmonize_all_obs_data(obs_data)"},{"path":"/reference/harmonize_all_obs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize All Observation Data Tables — harmonize_all_obs_data","text":"obs_data list observation datasets.","code":""},{"path":"/reference/harmonize_all_obs_data.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Harmonize All Observation Data Tables — harmonize_all_obs_data","text":"list harmonized observation datasets.","code":""},{"path":"/reference/harmonize_column_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize Column Types — harmonize_column_types","title":"Harmonize Column Types — harmonize_column_types","text":"Harmonizes types columns dataframe according type mapping.","code":""},{"path":"/reference/harmonize_column_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Harmonize Column Types — harmonize_column_types","text":"","code":"harmonize_column_types(   df,   types_map = NULL,   dictionary_path = system.file(\"extdata\", \"star_dictionary.csv\", package = \"startbox\") )"},{"path":"/reference/harmonize_column_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize Column Types — harmonize_column_types","text":"df dataframe harmonize. types_map (optional) predefined type mapping (otherwise load CSV). dictionary_path (optional) path CSV dictionary file types_map provided.","code":""},{"path":"/reference/harmonize_column_types.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Harmonize Column Types — harmonize_column_types","text":"dataframe harmonized column types.","code":""},{"path":"/reference/harmonize_plot_id_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize plot_id format to match placette (e.g. 10A to A10) — harmonize_plot_id_format","title":"Harmonize plot_id format to match placette (e.g. 10A to A10) — harmonize_plot_id_format","text":"Harmonize plot_id format match placette (e.g. 10A A10)","code":""},{"path":"/reference/harmonize_plot_id_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Harmonize plot_id format to match placette (e.g. 10A to A10) — harmonize_plot_id_format","text":"","code":"harmonize_plot_id_format(pid)"},{"path":"/reference/harmonize_plot_id_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize plot_id format to match placette (e.g. 10A to A10) — harmonize_plot_id_format","text":"pid vector plot_id (character)","code":""},{"path":"/reference/harmonize_plot_id_format.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Harmonize plot_id format to match placette (e.g. 10A to A10) — harmonize_plot_id_format","text":"harmonized plot_id (e.g. A10, TNT3, etc.)","code":""},{"path":"/reference/incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"calculation of disease incidence — incidence","title":"calculation of disease incidence — incidence","text":"function calculates frequency disease observed population, .e. number sampled units (leaves, bunches, plants, etc.) infected expressed percentage total number units observed.","code":""},{"path":"/reference/incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"calculation of disease incidence — incidence","text":"","code":"incidence(vecteur)"},{"path":"/reference/incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculation of disease incidence — incidence","text":"vecteur numeric vector disease severity observations percentage","code":""},{"path":"/reference/incidence.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"calculation of disease incidence — incidence","text":"numeric value incidence, percent","code":""},{"path":"/reference/incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"calculation of disease incidence — incidence","text":"","code":"vec <- c(1, 2, 3, 0, 5, 6, 0) incidence(vec) #> [1] 71.42857"},{"path":"/reference/intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"calculation of disease intensity — intensity","title":"calculation of disease intensity — intensity","text":"function calculate disease intensity, mean value severity measurements. disease intensity amount disease present population, expressed percentage.","code":""},{"path":"/reference/intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"calculation of disease intensity — intensity","text":"","code":"intensity(vecteur)"},{"path":"/reference/intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculation of disease intensity — intensity","text":"vecteur numeric vector disease severity observations percentage","code":""},{"path":"/reference/intensity.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"calculation of disease intensity — intensity","text":"numeric value intensity","code":""},{"path":"/reference/intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"calculation of disease intensity — intensity","text":"","code":"vec <- c(100, 20, 30, 0, 5, 0, 0) intensity(vec) #> [1] 22.14286"},{"path":"/reference/load_data_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Import ","title":"Import ","text":"function loads Excel sheets whose names start \"data_\" Excel file stored self$excel_data_trial. sheet converted data.frame stored obs_data list R6 object. sheet already exists obs_data, replaced trace logged.","code":""},{"path":"/reference/load_data_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Import ","text":"","code":"load_data_sheets(self)"},{"path":"/reference/load_data_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import ","text":"self user_data R6 object containing Excel file path observation data.","code":""},{"path":"/reference/load_data_sheets.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Import ","text":"Updates self$obs_data newly loaded sheets. Returns invisible(self$obs_data).","code":""},{"path":"/reference/load_metadata_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","title":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","text":"Reads sheets named \"placette\" \"modalite\" Excel trial file stored self$excel_data_trial, stores non-empty content metadata list UserData object.","code":""},{"path":"/reference/load_metadata_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","text":"","code":"load_metadata_sheets(self)"},{"path":"/reference/load_metadata_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","text":"self instance UserData R6 class containing path Excel trial file.","code":""},{"path":"/reference/load_metadata_sheets.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","text":"None. Updates self$metadata assigning: \"plot_desc\" \"placette\" sheet present non-empty. \"moda_desc\" \"modalite\" sheet present non-empty.","code":""},{"path":"/reference/load_metadata_sheets.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Load Metadata Sheets from Excel Trial File — load_metadata_sheets","text":"Empty rows (fully NA empty strings) removed sheet storage. Messages printed confirm loading alert sheets missing empty.","code":""},{"path":"/reference/merge_data_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","title":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","text":"Merges observation data metadata sheets (\"placette\" \"modalite\") available. function first joins plot-level treatment-level metadata, links result combined observation data using plot_id column.","code":""},{"path":"/reference/merge_data_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","text":"","code":"merge_data_metadata(self)"},{"path":"/reference/merge_data_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","text":"self instance UserData R6 class containing observation data metadata.","code":""},{"path":"/reference/merge_data_metadata.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","text":"data.frame observation data enriched plot treatment metadata. observation data available, returns merged plot + modality metadata. required metadata missing, returns NULL message.","code":""},{"path":"/reference/merge_data_metadata.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Prepare Final Merged Dataset with Metadata — merge_data_metadata","text":"Assumes self$metadata$plot_desc contains factor_level_code plot_id. Assumes self$metadata$moda_desc contains xp_trt_code. self$combined_data set, calls combine_data_obs() made automatically.","code":""},{"path":"/reference/merge_with_existing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","title":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","text":"Merges newly combined observation data existing data stored \"data\" sheet Excel workbook. Ensures consistent data types avoids duplication based prov_name.","code":""},{"path":"/reference/merge_with_existing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","text":"","code":"merge_with_existing_data(wb, combined)"},{"path":"/reference/merge_with_existing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","text":"wb workbook object openxlsx2 package, representing loaded Excel trial file. combined data.frame containing newly combined standardized observation data merged.","code":""},{"path":"/reference/merge_with_existing_data.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","text":"data.frame containing original new data, duplicates replaced applicable.","code":""},{"path":"/reference/merge_with_existing_data.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Merge Combined Data with Existing Excel Sheet — merge_with_existing_data","text":"Converts key columns (prov_name, plot_id, etc.) character ensure compatibility. Converts *_PC columns numeric format. prov_name already exists original data, corresponding rows replaced new data. Removes existing \"data\" worksheet workbook prepare writing updated version.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_xpbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot summary for an experiment — plot_xpbar","title":"Barplot summary for an experiment — plot_xpbar","text":"function automatically generates bar graph observation experimental data.","code":""},{"path":"/reference/plot_xpbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Barplot summary for an experiment — plot_xpbar","text":"","code":"plot_xpbar(   data2plot,   xcol = \"xp_trt_code\",   ycol = \"value\",   fillcol = NULL,   scale = NULL,   bar_color = NULL,   bar_width = 0.7,   border_tnt = TRUE,   show_errorbar = TRUE,   ... )"},{"path":"/reference/plot_xpbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot summary for an experiment — plot_xpbar","text":"data2plot dataframe, first col used x axis, col value y axis col type fill. xcol col used factor x avis ycol col used y axis fillcol col used fill scale Upper limit y axis. NULL, automatic adjustment. bar_color Bar fill colour. bar_width bar width border_tnt true, border color set red TNT show_errorbar display error bars ... parameters labs (title, x, y,fill)","code":""},{"path":"/reference/plot_xpbar.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Barplot summary for an experiment — plot_xpbar","text":"barplot","code":""},{"path":"/reference/plot_xpbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot summary for an experiment — plot_xpbox","title":"Boxplot summary for an experiment — plot_xpbox","text":"function automatically generates box plot","code":""},{"path":"/reference/plot_xpbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Boxplot summary for an experiment — plot_xpbox","text":"","code":"plot_xpbox(   data,   echelle = NULL,   show_dots = FALSE,   calculation_type = \"frequence\",   ... )"},{"path":"/reference/plot_xpbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot summary for an experiment — plot_xpbox","text":"data Raw data containing least plot_id, xp_trt_code \"_PC\" variable. echelle Upper limit y-axis (optional, otherwise automatic). show_dots displaying points calculation_type choice calculation function used default frequency ... parameters labs (title, x, y,fill)","code":""},{"path":"/reference/plot_xpbox.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Boxplot summary for an experiment — plot_xpbox","text":"ggplot2 object.","code":""},{"path":"/reference/plot_xpheat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Heatmap of Experimental Data — plot_xpheat","title":"Plot a Heatmap of Experimental Data — plot_xpheat","text":"Generates heatmap based experimental observation data, using plot_x plot_y coordinates coloring according selected disease variable (_PC columns).","code":""},{"path":"/reference/plot_xpheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Plot a Heatmap of Experimental Data — plot_xpheat","text":"","code":"plot_xpheat(   data,   variable,   titre = NULL,   echelle = NULL,   orientation = c(\"vertical\", \"horizontal\"),   residus = FALSE,   fill = NULL,   caption = NULL )"},{"path":"/reference/plot_xpheat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Heatmap of Experimental Data — plot_xpheat","text":"data dataframe containing least 'plot_id', 'plot_x', 'plot_y', variable interest, optionally 'calculation'. variable Character. name column representing variable display (e.g., \"PM_LEAF_PC\"). titre (optional) Character. Title plot. NULL, default title based variable used. echelle (optional) Numeric. Maximum value fill color scale. NULL, automatic scale calculated. orientation Character. Either \"vertical\" \"horizontal\" control plot orientation. Default \"vertical\". residus Logical. TRUE, centers values subtracting global mean (residual visualization). fill Optional. vector two colors (e.g., c(\"yellow\", \"red\")) manually define fill gradient. Ignored residus = TRUE. caption Character. string used caption text displayed bottom plot. Default \"IFV+\".","code":""},{"path":"/reference/plot_xpheat.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Plot a Heatmap of Experimental Data — plot_xpheat","text":"ggplot2 heatmap object.","code":""},{"path":"/reference/plot_xpheat.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Plot a Heatmap of Experimental Data — plot_xpheat","text":"Aggregates values plot_id, taking mean multiple observations exist. *_PC variable found data, function stop error. Useful visualizing spatial patterns disease experimental trials.","code":""},{"path":"/reference/prepare_excel_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Excel Trial File from Template — prepare_excel_model","title":"Prepare Excel Trial File from Template — prepare_excel_model","text":"Prepares Excel trial file copying blank template self$excel_data_trial missing invalid. ensures valid Excel structure available inserting observation metadata sheets.","code":""},{"path":"/reference/prepare_excel_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Prepare Excel Trial File from Template — prepare_excel_model","text":"","code":"prepare_excel_model(self, directory = NULL, filename = NULL)"},{"path":"/reference/prepare_excel_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Excel Trial File from Template — prepare_excel_model","text":"self instance UserData R6 class. directory Character. Directory new file saved. Defaults current working directory NULL. filename Character. Name new Excel file (must end .xlsx). NULL, default name based template used.","code":""},{"path":"/reference/prepare_excel_model.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Prepare Excel Trial File from Template — prepare_excel_model","text":"None. method updates self$excel_data_trial path copied file.","code":""},{"path":"/reference/prepare_excel_model.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Prepare Excel Trial File from Template — prepare_excel_model","text":"self$excel_data_trial already set file exists, nothing done. Otherwise, method copies self$excel_model specified location updates reference object. message printed indicate success failure.","code":""},{"path":"/reference/remove_string_pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove string in a character vector — remove_string_pairwise","title":"Remove string in a character vector — remove_string_pairwise","text":"function takes two character vectors length , position, removes string pattern[] vec[], ignoring case. either element position equals \"TNT\" (case-insensitive), returns \"TNT\" position instead.","code":""},{"path":"/reference/remove_string_pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Remove string in a character vector — remove_string_pairwise","text":"","code":"remove_string_pairwise(vec, pattern, separator = NULL)"},{"path":"/reference/remove_string_pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove string in a character vector — remove_string_pairwise","text":"vec character vector pattern character vector separator character separate parts string, example \"_\"","code":""},{"path":"/reference/remove_string_pairwise.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Remove string in a character vector — remove_string_pairwise","text":"character vector","code":""},{"path":"/reference/remove_string_pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Remove string in a character vector — remove_string_pairwise","text":"","code":"plot_id <- c(\"1a\",\"2A\",\"1B\",\"tnt1\",\"4c\") plot_block <- c(\"A\",\"A\",\"B\",\"1\",\"C\") remove_string_pairwise(vec = plot_id, pattern = plot_block) #> [1] \"Strings extracted are : 1 ; 2 ; TNT ; 4\" #> [1] \"1\"   \"2\"   \"1\"   \"TNT\" \"4\""},{"path":"/reference/resume_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Resume data — resume_data","title":"Resume data — resume_data","text":"function summarizes data dataframe according user-defined groups functions. particular, allows calculate intensity frequency disease attack per plot.","code":""},{"path":"/reference/resume_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Resume data — resume_data","text":"","code":"resume_data(   data,   var_col,   group_cols,   funs = list(intensite = intensity, frequence = incidence),   code_tnt = \"TNT\",   df_tnt = NULL )"},{"path":"/reference/resume_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resume data — resume_data","text":"data dataframe resume var_col character, colname variable plot group_cols colnames grouping funs vector statistics applied, default c(\"intensity\",\"incidence\") code_tnt efficacy : string identify TNT row dataframe default \"TNT\" df_tnt efficacy : dataframe associate tnt_id bloc_id plot_id. tnt_id plot_id TNT MUST col df_tnt","code":""},{"path":"/reference/resume_data.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Resume data — resume_data","text":"dataframe group_cols including 'calculation' column specifies name functions applied variable 'value' column gives calculated values.","code":""},{"path":"/reference/resume_pivot_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot wider a resume dataframe — resume_pivot_wider","title":"Pivot wider a resume dataframe — resume_pivot_wider","text":"Pivot wider resume dataframe","code":""},{"path":"/reference/resume_pivot_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Pivot wider a resume dataframe — resume_pivot_wider","text":"","code":"resume_pivot_wider(df_resume)"},{"path":"/reference/resume_pivot_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot wider a resume dataframe — resume_pivot_wider","text":"df_resume dataframe returned resume_data function","code":""},{"path":"/reference/resume_pivot_wider.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Pivot wider a resume dataframe — resume_pivot_wider","text":"dataframe wider format","code":""},{"path":"/reference/save_data_to_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Combined Data to a Versioned Excel File — save_data_to_excel","title":"Save Combined Data to a Versioned Excel File — save_data_to_excel","text":"Saves provided combined observation data \"data\" sheet versioned Excel file. function creates copy original Excel file incremented suffix (e.g., _v1, _v2, etc.) avoid overwriting existing files.","code":""},{"path":"/reference/save_data_to_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Save Combined Data to a Versioned Excel File — save_data_to_excel","text":"","code":"save_data_to_excel(combined_data, excel_data_trial_path)"},{"path":"/reference/save_data_to_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Combined Data to a Versioned Excel File — save_data_to_excel","text":"combined_data data.frame containing combined observation data write Excel file. excel_data_trial_path Character. Full path original Excel file use base creating versioned copy.","code":""},{"path":"/reference/save_data_to_excel.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Save Combined Data to a Versioned Excel File — save_data_to_excel","text":"character string containing full path newly saved versioned Excel file.","code":""},{"path":"/reference/save_data_to_excel.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Save Combined Data to a Versioned Excel File — save_data_to_excel","text":"original Excel file modified. \"data\" sheet exists versioned file, replaced new data. function returns path versioned file, includes _v1, _v2, etc., ensure uniqueness.","code":""},{"path":"/reference/severity_diseased.html","id":null,"dir":"Reference","previous_headings":"","what":"calculation of disease severity — severity_diseased","title":"calculation of disease severity — severity_diseased","text":"function calculate disease severity, mean value severity measurements diseased units (leaves, bunches, plants...). disease severity area sampling unit affected disease, expressed percentage total area.","code":""},{"path":"/reference/severity_diseased.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"calculation of disease severity — severity_diseased","text":"","code":"severity_diseased(vecteur)"},{"path":"/reference/severity_diseased.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculation of disease severity — severity_diseased","text":"vecteur numeric vector disease severity observations percentage","code":""},{"path":"/reference/severity_diseased.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"calculation of disease severity — severity_diseased","text":"numeric value intensity","code":""},{"path":"/reference/severity_diseased.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"calculation of disease severity — severity_diseased","text":"","code":"vec <- c(100, 20, 30, 0, 5, 0, 0) severity_diseased(vec) #> [1] 38.75"},{"path":"/reference/standardise_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize an experimental data file or data frame — standardise_data","title":"Standardize an experimental data file or data frame — standardise_data","text":"Standardize experimental data file data frame","code":""},{"path":"/reference/standardise_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Standardize an experimental data file or data frame — standardise_data","text":"","code":"standardise_data(   input_data,   lookup_table = c(Mildiou_Feuille = \"PM_LEAF_PC\", Mildiou_Grappe = \"PM_BER_PC\",     Oidium_Grappe = \"UN_BER_PC\", Oidium_Feuille = \"UN_LEAF_PC\", Stade.phénologique =     \"bbch_stage\", Stade.phenologique = \"bbch_stage\", `Stade phenologique` = \"bbch_stage\",     Placette = \"plot_id\", Bloc = \"block_id\", Date = \"observation_date\", Code.essai =     \"experiment_id\") )"},{"path":"/reference/standardise_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize an experimental data file or data frame — standardise_data","text":"input_data path .csv .xlsx file import, data.frame already loaded R. lookup_table Optional. named vector mapping original column names standardized names. NULL, default mapping used.","code":""},{"path":"/reference/standardise_data.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Standardize an experimental data file or data frame — standardise_data","text":"cleaned structured data.frame, ready use downstream processing analysis.","code":""},{"path":"/reference/standardise_topvigne_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize a raw TopVigne CSV file — standardise_topvigne_csv","title":"Standardize a raw TopVigne CSV file — standardise_topvigne_csv","text":"Checks file valid TopVigne CSV using check_topvigne_csv(), renames reshapes data using lookup table standard rules.","code":""},{"path":"/reference/standardise_topvigne_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Standardize a raw TopVigne CSV file — standardise_topvigne_csv","text":"","code":"standardise_topvigne_csv(   filepath,   lookup_table = c(Mildiou_Feuille = \"PM_LEAF_PC\", Mildiou_Grappe = \"PM_BER_PC\",     Oidium_Grappe = \"UN_BER_PC\", Oidium_Feuille = \"UN_LEAF_PC\", Stade.phénologique =     \"bbch_stage\", Stade.phenologique = \"bbch_stage\", `Stade phenologique` = \"bbch_stage\",     Placette = \"plot_id\", Bloc = \"plot_block\", Date = \"observation_date\", Code.essai =     \"experiment_id\") )"},{"path":"/reference/standardise_topvigne_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize a raw TopVigne CSV file — standardise_topvigne_csv","text":"filepath Character. Path raw .csv file standardize. lookup_table Named character vector. Mapping original column names standardized names.","code":""},{"path":"/reference/standardise_topvigne_csv.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Standardize a raw TopVigne CSV file — standardise_topvigne_csv","text":"standardized data.frame consistent column names structure.","code":""},{"path":"/reference/startbox-package.html","id":null,"dir":"Reference","previous_headings":"","what":"startbox: visualisation and standardization of experimental data in plant protection — startbox-package","title":"startbox: visualisation and standardization of experimental data in plant protection — startbox-package","text":"package used management visualisation experimental data plant protection trials.","code":""},{"path":"/reference/startbox-package.html","id":"auteur","dir":"Reference","previous_headings":"","what":"Auteur","title":"startbox: visualisation and standardization of experimental data in plant protection — startbox-package","text":"Maintainer: Xavier Delpuech xavier.delpuech@vignevin.com Authors: Hervé Maire herve.maire@vignevin.com Anne-Sophie Chazalmartin anne-sophie.chazalmartin@vignevin.com contributors: Institut Français de la Vigne et du Vin [copyright holder]","code":""},{"path":"/reference/startbox.html","id":null,"dir":"Reference","previous_headings":"","what":"startbox — startbox","title":"startbox — startbox","text":"package used manage display experimental plant protection data.","code":""},{"path":"/reference/startbox.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"startbox — startbox","text":"get started, see vignette: vignette(\"startbox\").","code":""},{"path":[]},{"path":"/reference/startbox.html","id":"auteur","dir":"Reference","previous_headings":"","what":"Auteur","title":"startbox — startbox","text":"Maintainer: Xavier Delpuech xavier.delpuech@vignevin.com Authors: Hervé Maire herve.maire@vignevin.com Anne-Sophie Chazalmartin anne-sophie.chazalmartin@vignevin.com contributors: Institut Français de la Vigne et du Vin [copyright holder]","code":""},{"path":"/reference/test_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","title":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","text":"function performs ANOVA Kruskal-Wallis test depending assumptions normality homoscedasticity. returns summary statistical groups using post-hoc SNK test (ANOVA) Kruskal-Conover test.","code":""},{"path":"/reference/test_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","text":"","code":"test_stats(   data,   value_col = \"PM_LEAF_PC\",   trt_col = \"xp_trt_code\",   alpha = 0.05,   group_method = \"SNK\",   force_test = NULL,   verbose = TRUE )"},{"path":"/reference/test_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","text":"data data.frame least column values grouping factor. value_col Column name (string) numeric values. trt_col Column name (string) grouping (default: \"xp_trt_code\"). alpha Significance threshold (default = 0.05). group_method \"SNK\" \"LSD\" ANOVA; always \"kruskal\" Kruskal-Wallis. force_test Force \"anova\" \"kruskal\" (bypass assumptions). verbose Logical. TRUE, prints diagnostic messages.","code":""},{"path":"/reference/test_stats.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","text":"list following elements: test string indicating test used: \"Anova\", \"Kruskal\", \"Non applicable\". p_value p-value global test. groupes data.frame three columns: modality, mean, groups. groups column contains statistical group letters. list test name, p-value group letters.","code":""},{"path":"/reference/test_stats.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Perform ANOVA or Kruskal-Wallis test and group comparison — test_stats","text":"xp _trt_code provided, inferred plot_id column: numeric plot codes extracted beginning string (e.g. \"10A\" 10), \"TNT\" used directly untreated control plots. Group comparison meaningful global test (ANOVA Kruskal-Wallis) statistically significant.","code":""},{"path":"/reference/user_data.html","id":null,"dir":"Reference","previous_headings":"","what":"User Data R6 Class — user_data","title":"User Data R6 Class — user_data","text":"R6 class designed manage experimental data, including observation sheets, metadata, traceability logs. provides methods import, merge, export data Excel files tracking operations reproducibility.","code":""},{"path":"/reference/user_data.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"User Data R6 Class — user_data","text":"excel_data_trial Path current Excel file used import/export operations. combined_data data.frame containing observation data merged standardized. obs_data named list data.frames, corresponding sheet file containing observation data. metadata list storing metadata tables, \"placette\" \"modalite\". traceability data.frame storing log operations performed data (import, export, update, etc.).","code":""},{"path":[]},{"path":"/reference/user_data.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"User Data R6 Class — user_data","text":"user_data$new() user_data$add_metadata() user_data$add_obs() user_data$show_obs_data() user_data$log_trace() user_data$combine_data_obs() user_data$clone()","code":""},{"path":"/reference/user_data.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"User Data R6 Class — user_data","text":"Initializes new user_data object. Excel file provided, default template used.","code":""},{"path":"/reference/user_data.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$new(trial_file = NULL)"},{"path":"/reference/user_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Data R6 Class — user_data","text":"trial_file Optional. Path Excel file load. NULL, default template used.","code":""},{"path":"/reference/user_data.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"new instance UserData class.","code":""},{"path":"/reference/user_data.html","id":"method-add-metadata-","dir":"Reference","previous_headings":"","what":"Method add_metadata()","title":"User Data R6 Class — user_data","text":"Adds updates metadata element metadata slot.","code":""},{"path":"/reference/user_data.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$add_metadata(name, value)"},{"path":"/reference/user_data.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Data R6 Class — user_data","text":"name single character string specifying name element add. value object add (e.g., data.frame, list, metadata).","code":""},{"path":"/reference/user_data.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"None. Modifies metadata list -place.","code":""},{"path":"/reference/user_data.html","id":"method-add-obs-","dir":"Reference","previous_headings":"","what":"Method add_obs()","title":"User Data R6 Class — user_data","text":"Adds new observation dataset obs_data replaces existing one. Automatically logs operation adds provenance columns.","code":""},{"path":"/reference/user_data.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$add_obs(name, df, source_file = NULL, overwrite = FALSE)"},{"path":"/reference/user_data.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Data R6 Class — user_data","text":"name Name observation source. df data.frame containing observation data. overwrite Logical. TRUE, replaces existing entry name.","code":""},{"path":"/reference/user_data.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"None. object modified place.","code":""},{"path":"/reference/user_data.html","id":"method-show-obs-data-","dir":"Reference","previous_headings":"","what":"Method show_obs_data()","title":"User Data R6 Class — user_data","text":"Displays first rows observation dataset stored obs_data.","code":""},{"path":"/reference/user_data.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$show_obs_data()"},{"path":"/reference/user_data.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"list data.frames (head dataset).","code":""},{"path":"/reference/user_data.html","id":"method-log-trace-","dir":"Reference","previous_headings":"","what":"Method log_trace()","title":"User Data R6 Class — user_data","text":"function adds new entry traceability log stored R6 object. records type operation, target file sheet name(s), timestamp.","code":""},{"path":"/reference/user_data.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$log_trace(operation, filename, description = \"\")"},{"path":"/reference/user_data.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Data R6 Class — user_data","text":"operation character string describing action performed (e.g. \"import\", \"export\", \"update\"). filename character string indicating name(s) file sheet involved operation.","code":""},{"path":"/reference/user_data.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"return value. function updates internal traceability data frame.","code":""},{"path":"/reference/user_data.html","id":"method-combine-data-obs-","dir":"Reference","previous_headings":"","what":"Method combine_data_obs()","title":"User Data R6 Class — user_data","text":"Combines loaded observation datasets, applies type harmonization, merges existing Excel trial file. Excel trial file exist, created template. Also reads available metadata sheets.","code":""},{"path":"/reference/user_data.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$combine_data_obs()"},{"path":"/reference/user_data.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"User Data R6 Class — user_data","text":"combined data.frame observations, stored self$combined_data returned invisibly.","code":""},{"path":"/reference/user_data.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"User Data R6 Class — user_data","text":"objects class cloneable method.","code":""},{"path":"/reference/user_data.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"User Data R6 Class — user_data","text":"","code":"user_data$clone(deep = FALSE)"},{"path":"/reference/user_data.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"User Data R6 Class — user_data","text":"deep Whether make deep clone.","code":""},{"path":"/reference/wrapper_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to load all relevant data for plotting — wrapper_data","title":"Wrapper to load all relevant data for plotting — wrapper_data","text":"wrapper function loads observation sheets (sheets named \"data_*\") associated metadata (e.g., \"placette\" \"modalite\" sheets) Excel file user_data R6 object. updates obs_data metadata accordingly.","code":""},{"path":"/reference/wrapper_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Wrapper to load all relevant data for plotting — wrapper_data","text":"","code":"wrapper_data(self)"},{"path":"/reference/wrapper_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to load all relevant data for plotting — wrapper_data","text":"self user_data R6 object containing Excel file path.","code":""},{"path":"/reference/wrapper_data.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Wrapper to load all relevant data for plotting — wrapper_data","text":"Invisibly returns nothing. Updates object place observation metadata.","code":""},{"path":"/reference/write_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Write log to Excel file — write_log","title":"Write log to Excel file — write_log","text":"function writes content traceability slot user_data object sheet named \"log\" associated Excel file. sheet already exists, new entries appended existing ones.","code":""},{"path":"/reference/write_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Utilisation","title":"Write log to Excel file — write_log","text":"","code":"write_log(self)"},{"path":"/reference/write_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write log to Excel file — write_log","text":"self user_data R6 object traceability data.frame excel_data_trial path.","code":""},{"path":"/reference/write_log.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Write log to Excel file — write_log","text":"return value. Excel file updated place.","code":""}]
